
SUMMARY (EDITED): 33 PASSED and 6 FAILED on v0.5 branch image #3e0e80a, run on local environment with vagrant and docker containers.

Total runtime as configured:  7 hrs 09 minutes

Note: The same test results including the same failures occurred on master branch image #346f9fb.
Note: changing some parameters in config.yaml (or their overrides in local_fabric.sh)
and/or chco2.go (or their overrides in specific testcases) may affect the passrate.
For example, if you define a larger batchsize, then do not set "CHsMustMatchExpected" to true
in those several testcases that do so, to disable enforcement of the internal CH counting logic.

ISSUES OPEN in hyperledger/fabric:

   #2308 - CAT_25 and CAT_27
   #2309 - CAT_36 and CAT_38
   #2313 - CAT_37 and CAT_39
   #2148 - CAT_41 : long run, restarting 1 and sometimes 2 nodes at once. (Not run as part of this test suite.)
   #2265 - CAT_24 and many others

FAILED CAT_25_S0S1S2_IQ_R0R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [17m33.516649622s]  !!!!!!!!!!!!!!!!!!!!
FAILED CAT_27_S1S2S3_IQ_R1R2R3_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [16m53.046759738s]  !!!!!!!!!!!!!!!!!!!!
FAILED CAT_36_S0S1S2_D_I_R0R1_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [11m25.067834242s]  !!!!!!!!!!!!!!!!!!!!
FAILED CAT_37_S0S1S2_D_I_R0R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [15m17.643256789s]  !!!!!!!!!!!!!!!!!!!!
FAILED CAT_38_S1S2S3_D_I_R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [11m32.461056284s]  !!!!!!!!!!!!!!!!!!!!
FAILED CAT_39_S1S2S3_D_I_R1R2R3_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [14m24.998660625s]  !!!!!!!!!!!!!!!!!!!!



=========== GROUP START TIME Sat Jul 30 00:58:59 UTC 2016
===========

Note: Output is recorded to file GO_TEST__MULTI__Jul3000:58:59UTC2016

Note: Brief test summaries are also written by tests themselves to file GO_TESTS_SUMMARY

Preparing to run these 39 testcases:
CAT_01_S1_IQDQIQ.go
CAT_02_S0_IQDQIQ.go
CAT_03_SnIQRnIQ_CycleAndRepeat.go
CAT_04_SnIQRnIQDQIQ_CycleAndRepeat.go
CAT_05_S1_IQDQIQ_R1_IQIQ_repeats.go
CAT_06_S1_IQDQIQ_R1_IQ_S2_IQ.go
CAT_07_S1_IQDQIQ_R1_IQ_S0_IQ.go
CAT_08_S0_IQDQIQ_R0_IQIQ_repeats.go
CAT_09_S0_IQDQIQ_R0_IQ_S2_IQ.go
CAT_10_S0_IQDQIQ_R0_IQ_S1_IQ.go
CAT_11_S2S1_IQDIQ.go
CAT_12_S0S1_IQDI.go
CAT_13_S2_IQDQIQ_S1_IQDD.go
CAT_14_S0_IQDQIQ_S1_IQDD.go
CAT_15_S1_IQ_S2_R1_IQ.go
CAT_16_S2_IQ_S1_IQ_R1_IQ.go
CAT_17_S1_IQ_S0_R0_IQ.go
CAT_18_S0_IQ_S1_IQ_R0_IQ.go
CAT_19_S2S1_IQ_R1_IQ.go
CAT_20_S2S1_IQ_R1R2_IQ.go
CAT_21_S0S1_IQ_R0_IQ.go
CAT_22_S0S1_IQ_R0R1_IQ.go
CAT_23_S0S1S2_IQ_R0_IQ_R1_IQ.go
CAT_24_S0S1S2_IQ_R0R1_IQIQ.go
CAT_25_S0S1S2_IQ_R0R1R2_IQ.go
CAT_26_S1S2S3_IQ_R1R2_IQ.go
CAT_27_S1S2S3_IQ_R1R2R3_IQ.go
CAT_28_S0S1S2S3_R0R1R2_IQ_R3_IQ.go
CAT_29_S0S1S2S3_R0R1R2R3_IQ.go
CAT_30_DQIQDQIQ.go
CAT_31_S1_DQIQDQIQ.go
CAT_32_S0_IQ_DQIQDQIQ.go
CAT_33_S1S2_D_I_R1_IQ.go
CAT_34_S0S1_D_I_R0_IQ.go
CAT_35_S0S1_D_I_R0R1_IQ.go
CAT_36_S0S1S2_D_I_R0R1_IQ.go
CAT_37_S0S1S2_D_I_R0R1R2_IQ.go
CAT_38_S1S2S3_D_I_R1R2_IQ.go
CAT_39_S1S2S3_D_I_R1R2R3_IQ.go

Using test environment variables:

IMAGE=3e0e80a 
PEER_IMAGE=rameshthoomu/peer:$IMAGE
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:$IMAGE
CONSENSUS=pbft
PBFT_MODE=batch
docker run -d --name=PEER0 -it \
                -e CORE_VM_ENDPOINT="http://$IP:$PORT" \
                -e CORE_PEER_ID="vp0" \
                -e CORE_SECURITY_ENABLED=true \
                -e CORE_SECURITY_PRIVACY=true \
                -e CORE_PEER_ADDRESSAUTODETECT=false -p $REST_PORT:5000 -p `expr $USE_PORT + 1`:30303 \
                -e CORE_PEER_ADDRESS=$IP:`expr $USE_PORT + 1` \
                -e CORE_PEER_PKI_ECA_PADDR=$IP:50051 \
                -e CORE_PEER_PKI_TCA_PADDR=$IP:50051 \
                -e CORE_PEER_PKI_TLSCA_PADDR=$IP:50051 \
                -e CORE_PEER_LISTENADDRESS=0.0.0.0:30303 \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=$CONSENSUS \
                -e CORE_PBFT_GENERAL_MODE=$PBFT_MODE \
                -e CORE_PBFT_GENERAL_N=$NUM_PEERS \
                -e CORE_PBFT_GENERAL_BATCHSIZE=$PBFT_BATCHSIZE \
                -e CORE_PBFT_GENERAL_TIMEOUT_REQUEST=10s \
		-e CORE_PBFT_GENERAL_TIMEOUT_NULLREQUEST=1s \
		-e CORE_LOGGING_LEVEL=ERROR \
                -e CORE_VM_DOCKER_TLS_ENABLED=false \
                -e CORE_SECURITY_ENROLLID=test_vp0 \
                -e CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT $PEER_IMAGE peer node start
docker run  -d --name=PEER$peer_id -it \
                -e CORE_VM_ENDPOINT="http://$IP:$PORT" \
                -e CORE_PEER_ID="vp"$peer_id \
                -e CORE_SECURITY_ENABLED=true \
                -e CORE_SECURITY_PRIVACY=true \
                -e CORE_PEER_ADDRESSAUTODETECT=true -p $REST_PORT:5000 -p `expr $USE_PORT + 1`:30303 \
                -e CORE_PEER_DISCOVERY_ROOTNODE=$IP:30001 \
                -e CORE_PEER_PKI_ECA_PADDR=$IP:50051 \
                -e CORE_PEER_PKI_TCA_PADDR=$IP:50051 \
                -e CORE_PEER_PKI_TLSCA_PADDR=$IP:50051 \
                -e CORE_PEER_LISTENADDRESS=0.0.0.0:30303 \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=$CONSENSUS \
                -e CORE_PBFT_GENERAL_MODE=$PBFT_MODE \
                -e CORE_PBFT_GENERAL_N=$NUM_PEERS \
                -e CORE_PBFT_GENERAL_BATCHSIZE=$PBFT_BATCHSIZE \
                -e CORE_PBFT_GENERAL_TIMEOUT_REQUEST=10s \
		-e CORE_PBFT_GENERAL_TIMEOUT_NULLREQUEST=1s \
                -e CORE_LOGGING_LEVEL=ERROR \
                -e CORE_VM_DOCKER_TLS_ENABLED=false \
                -e CORE_SECURITY_ENROLLID=$USER_NAME \
                -e CORE_SECURITY_ENROLLSECRET=$SECRET_KEY $PEER_IMAGE peer node start


----------- go run CAT_01_S1_IQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 00:58:59 UTC 2016 -----------
-----------

BEGIN  CAT_01_S1_IQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 00:59:01.068508849 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 00:59:01 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
957ec0179137560674bca2657aa460279c3fddab81190e364717c1792aefab6a
--------> Starting hyperledger PEER0
85eb57cb3961705625f6deac1b190937b65bcd75b58ff73806d8c8c8405e3a42
PEER0 CONTAINERID=85eb57cb3961
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
1a9438fc2ed2704c3ca4ed61dc55e82e1d0cab41fab887050517d8b92ab9050f
--------> Starting hyperledger PEER2 <-----------
1b7585b51cb4bc166e9d70d2bfd34e4faeafadf26cebde76b67e076374bb2d41
--------> Starting hyperledger PEER3 <-----------
b64b98ee8c178675eaad815642331f24583c725194ba760422917947762e935e
--------> Printing list of Docker Containers
b64b98ee8c17 1b7585b51cb4 1a9438fc2ed2 85eb57cb3961
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 85eb57cb3961   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 1a9438fc2ed2   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1b7585b51cb4   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID b64b98ee8c17   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "vBiMBPSBmt8BQBuzkXP3jf2oyPyf2+EswnzFpjItzVg="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "vB5qU8n8OKHo3TORRRggw9xZq83qPtrElyCmazr++PY="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "rygkOXwM8wTZxxRkvWdSjSjYRtbgLbfgEPoTYeTjh7I="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "233HKUb0uuA8eQMfv2u4/13ytaCi9FKS2JEV0hMyQck="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999993/1000007) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999993/1000007 2:999993/1000007 3:999993/1000007 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (9). Actual CHs: PEER0(9) PEER2(9) PEER3(9) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=500 B=500

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (500/500) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:500/500 2:500/500 3:500/500 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (497/503) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:497/503 2:497/503 3:497/503 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_01_S1_IQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [5m1.115923359s]  

-----------
----------- go run CAT_01_S1_IQDQIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 01:04:02 UTC 2016 -----------


----------- go run CAT_02_S0_IQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 01:04:02 UTC 2016 -----------
-----------

BEGIN  CAT_02_S0_IQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 01:04:03.523510219 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 01:04:03 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
bc965cce815beb021ef243da696a564539e0fa11eef9b65b754860542e0e2e7f
--------> Starting hyperledger PEER0
7ecd7fcc0d57641d228effea9fdf756384dbf545f17f376450d490af2c882228
PEER0 CONTAINERID=7ecd7fcc0d57
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
2ff85519a6eda3189830e12d3ac9c96921e76ccb7c31391223ae086c0f6df80b
--------> Starting hyperledger PEER2 <-----------
2476e1fa4ce58c753423ada84f69b27a86e531b381a1231985fd7abdf1908363
--------> Starting hyperledger PEER3 <-----------
deee983b3638e813cfd9b98bc463e63ca078d96367b4e26f69321c018bf2ec51
--------> Printing list of Docker Containers
deee983b3638 2476e1fa4ce5 2ff85519a6ed 7ecd7fcc0d57
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 7ecd7fcc0d57   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 2ff85519a6ed   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 2476e1fa4ce5   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID deee983b3638   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
user: type secret: GOLANG


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "ZP1/uX0iKlLOhEl3IuuLYhCIAJ1ei57CwSg1Rrvym+U="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "xs2AMshg8KFkzn5Cqg4p6vqfAs7QVJLaUdwGwFJLA4s="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "J1rq8YjxDcDDwClgCpyJZIHuDwlWPDmwTFsaGzhhBUY="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "MHOzemeItw3bLIMsC2XcuJP8kOsGee8ASaBZ2xy+lSw="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (200) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER1(106) PEER2(106) PEER3(106) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=500 B=500

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (500/500) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:500/500 2:500/500 3:500/500 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER1(107) PEER2(107) PEER3(107) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (497/503) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:497/503 2:497/503 3:497/503 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER1(110) PEER2(110) PEER3(110) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_02_S0_IQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [5m42.289038651s]  

-----------
----------- go run CAT_02_S0_IQDQIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 01:09:45 UTC 2016 -----------


----------- go run CAT_03_SnIQRnIQ_CycleAndRepeat.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 01:09:45 UTC 2016 -----------
-----------

BEGIN  CAT_03_SnIQRnIQ_CycleAndRepeat.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 01:09:47.130067996 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 01:09:47 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
756f945567cf267bb012ab65ac180d312230a9c418786c20f7abde0a532d6126
--------> Starting hyperledger PEER0
b6823381f49dbd791625b3863e7abc27ee4c0c8beb6d307ec8aa29d08144fe63
PEER0 CONTAINERID=b6823381f49d
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
c01ea2a376d625670c92158d0d8ae3376c4dd024bdd2985880c9d1ed5512496d
--------> Starting hyperledger PEER2 <-----------
21950c3ec235de0d56e72aea4bc0256f03245cc2425bb019130bde9d5f24121d
--------> Starting hyperledger PEER3 <-----------
292e96399626005759aa345d1117f4522882e5d82578de045d5528c437d84801
--------> Printing list of Docker Containers
292e96399626 21950c3ec235 c01ea2a376d6 b6823381f49d
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID b6823381f49d   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID c01ea2a376d6   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 21950c3ec235   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 292e96399626   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
user: type secret: GOLANG



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "rw9SH7XNcjClIHKZ5W6HSbM/hSSOzsTH/z9/2C6WiLU="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "yKqLcsk5lVxvabZO1WXXTzBIFFULqhe/ybUk6lruNWo="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "t5aNq+eD7PSave9qsipozVPVnZuJtqsADH4fawe3uNg="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "+F1K+rfhcbcFGS5xzrDPzL8G2vYX4inLBMSE5XotKkw="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999874/1000126 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(68) PEER1(109) PEER2(109) PEER3(109) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999696/1000304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999696/1000304 2:999696/1000304 3:999696/1000304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(159) PEER2(159) PEER3(159) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999596/1000404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999596/1000404 1:999680/1000320 2:999596/1000404 3:999596/1000404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (212). Actual CHs: PEER0(211) PEER1(167) PEER2(211) PEER3(211) 

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (999496/1000504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999496/1000504 1:999496/1000504 3:999496/1000504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (263). Actual CHs: PEER0(261) PEER1(261) PEER3(261) 

RESTART PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999396/1000604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999396/1000604 1:999396/1000604 2:999469/1000531 3:999396/1000604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (315). Actual CHs: PEER0(313) PEER1(313) PEER2(275) PEER3(313) 

STOP PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (999296/1000704) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999296/1000704 1:999296/1000704 2:999296/1000704 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (366). Actual CHs: PEER0(363) PEER1(363) PEER2(363) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999196/1000804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999196/1000804 1:999196/1000804 2:999196/1000804 3:999278/1000722 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (418). Actual CHs: PEER0(415) PEER1(415) PEER2(415) PEER3(372) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 1/3 after many Invokes 
PASSED QUERY TEST: Expected A/B (998196/1001804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998196/1001804 1:998196/1001804 2:998196/1001804 3:998202/1001798 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (918). Actual CHs: PEER0(915) PEER1(915) PEER2(915) PEER3(912) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (998096/1001904) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:998096/1001904 2:998096/1001904 3:998096/1001904 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (969). Actual CHs: PEER1(965) PEER2(965) PEER3(965) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997996/1002004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998065/1001935 1:997996/1002004 2:997996/1002004 3:997996/1002004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1021). Actual CHs: PEER0(981) PEER1(1017) PEER2(1017) PEER3(1017) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (997896/1002104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997896/1002104 2:997896/1002104 3:997896/1002104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1072). Actual CHs: PEER0(1067) PEER2(1067) PEER3(1067) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997796/1002204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997796/1002204 1:997874/1002126 2:997796/1002204 3:997796/1002204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1124). Actual CHs: PEER0(1119) PEER1(1078) PEER2(1119) PEER3(1119) 

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (997696/1002304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997696/1002304 1:997696/1002304 3:997696/1002304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1175). Actual CHs: PEER0(1169) PEER1(1169) PEER3(1169) 

RESTART PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997596/1002404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997596/1002404 1:997596/1002404 2:997667/1002333 3:997596/1002404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1227). Actual CHs: PEER0(1221) PEER1(1221) PEER2(1184) PEER3(1221) 

STOP PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (997496/1002504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997496/1002504 1:997496/1002504 2:997496/1002504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1278). Actual CHs: PEER0(1271) PEER1(1271) PEER2(1271) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997396/1002604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997396/1002604 1:997396/1002604 2:997396/1002604 3:997478/1002522 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1330). Actual CHs: PEER0(1323) PEER1(1323) PEER2(1323) PEER3(1280) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 2/3 after many Invokes 
PASSED QUERY TEST: Expected A/B (996396/1003604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996396/1003604 1:996396/1003604 2:996396/1003604 3:996402/1003598 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1830). Actual CHs: PEER0(1823) PEER1(1823) PEER2(1823) PEER3(1820) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (996296/1003704) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:996296/1003704 2:996296/1003704 3:996296/1003704 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1881). Actual CHs: PEER1(1873) PEER2(1873) PEER3(1873) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (996196/1003804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996280/1003720 1:996196/1003804 2:996196/1003804 3:996196/1003804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1933). Actual CHs: PEER0(1881) PEER1(1925) PEER2(1925) PEER3(1925) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (996096/1003904) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996096/1003904 2:996096/1003904 3:996096/1003904 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1984). Actual CHs: PEER0(1975) PEER2(1975) PEER3(1975) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (995996/1004004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995996/1004004 1:996071/1003929 2:995996/1004004 3:995996/1004004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2036). Actual CHs: PEER0(2027) PEER1(1988) PEER2(2027) PEER3(2027) 

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (995896/1004104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995896/1004104 1:995896/1004104 3:995896/1004104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2087). Actual CHs: PEER0(2077) PEER1(2077) PEER3(2077) 

RESTART PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (995796/1004204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995796/1004204 1:995796/1004204 2:995863/1004137 3:995796/1004204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2139). Actual CHs: PEER0(2129) PEER1(2129) PEER2(2094) PEER3(2129) 

STOP PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (995696/1004304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995696/1004304 1:995696/1004304 2:995696/1004304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2190). Actual CHs: PEER0(2179) PEER1(2179) PEER2(2179) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (995596/1004404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995596/1004404 1:995596/1004404 2:995596/1004404 3:995674/1004326 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2242). Actual CHs: PEER0(2231) PEER1(2231) PEER2(2231) PEER3(2190) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 3/3 after many Invokes 
PASSED QUERY TEST: Expected A/B (994596/1005404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:994596/1005404 1:994596/1005404 2:994596/1005404 3:994658/1005342 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2742). Actual CHs: PEER0(2731) PEER1(2731) PEER2(2731) PEER3(2700) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_03_SnIQRnIQ_CycleAndRepeat.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [33m34.545277452s]  

-----------
----------- go run CAT_03_SnIQRnIQ_CycleAndRepeat.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 01:43:21 UTC 2016 -----------


----------- go run CAT_04_SnIQRnIQDQIQ_CycleAndRepeat.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 01:43:21 UTC 2016 -----------
-----------

BEGIN  CAT_04_SnIQRnIQDQIQ_CycleAndRepeat.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 01:43:23.025261708 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 01:43:23 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
1b09c635db927032426e7733f036937020e62c7d932dd63a48e64418d56bfc60
--------> Starting hyperledger PEER0
83a7fae6e0d7af044e49455708f9974ea93bfcf3fc41eb55b9b2dc629b45a174
PEER0 CONTAINERID=83a7fae6e0d7
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
32b33b77f3609570dcb24b64f5ed763965ee631303b60344b93f85742ae18243
--------> Starting hyperledger PEER2 <-----------
938a10695f81146120dac3bb9df9371d37de2b9ac9b28a0c35a7b256db63f963
--------> Starting hyperledger PEER3 <-----------
d3b8d1c6d5f5c8137f8b70801a96102883f084050c8e051c42292135276b3f69
--------> Printing list of Docker Containers
d3b8d1c6d5f5 938a10695f81 32b33b77f360 83a7fae6e0d7
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 83a7fae6e0d7   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 32b33b77f360   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 938a10695f81   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID d3b8d1c6d5f5   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
user: type secret: GOLANG



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "5J3jeXJO5GoOurXHbF3peGP1YbndW0hbUErHUDsSF+4="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "8NP1nkxg+G0rSxSQ1ZmW6hAYVkHxv5/iIVjMAFDS4tM="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "xjLgV7UkGQfN4fzKhgULKhusOyJ31X3XUwXz+wYcA2c="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "7fRrQLSEG/2ki3m7DES4xDvhH2OwrGuu8nkjhHC1ekI="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999874/1000126 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(68) PEER1(109) PEER2(109) PEER3(109) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=10000 B=10000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 7e06bd6796639f9b28c2e744549556461ca8c8d222f787fcb9d5d1d067fe6d968ca25e44c17b90697129042e526c6705913de02ac2cb0936e5d6882c445b1c8b - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 7e06bd6796639f9b28c2e744549556461ca8c8d222f787fcb9d5d1d067fe6d968ca25e44c17b90697129042e526c6705913de02ac2cb0936e5d6882c445b1c8b - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (10000/10000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:10000/10000 2:10000/10000 3:10000/10000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER0(68) PEER1(110) PEER2(110) PEER3(110) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (9900/10100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9978/10022 1:9900/10100 2:9900/10100 3:9900/10100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (162). Actual CHs: PEER0(121) PEER1(162) PEER2(162) PEER3(162) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (9800/10200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9800/10200 2:9800/10200 3:9800/10200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (213). Actual CHs: PEER0(212) PEER2(212) PEER3(212) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (9700/10300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9700/10300 1:9771/10229 2:9700/10300 3:9700/10300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (265). Actual CHs: PEER0(264) PEER1(227) PEER2(264) PEER3(264) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=11000 B=11000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for aa6d637dfad31a1e3c3758c189a2e239e5c20929d2552d8f980b277e2853b9ee65be215c50f6ae298cafb3a1ea5fde3d8e02839eed0c9c17597202fab724a167 - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for aa6d637dfad31a1e3c3758c189a2e239e5c20929d2552d8f980b277e2853b9ee65be215c50f6ae298cafb3a1ea5fde3d8e02839eed0c9c17597202fab724a167 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (11000/11000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:11000/11000 1:0/0 2:11000/11000 3:11000/11000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (266). Actual CHs: PEER0(265) PEER1(227) PEER2(265) PEER3(265) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (10900/11100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10900/11100 1:10971/11029 2:10900/11100 3:10900/11100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (318). Actual CHs: PEER0(317) PEER1(280) PEER2(317) PEER3(317) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (10800/11200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10800/11200 1:10800/11200 3:10800/11200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (369). Actual CHs: PEER0(367) PEER1(367) PEER3(367) 

RESTART PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (10700/11300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10700/11300 1:10700/11300 2:10780/11220 3:10700/11300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (421). Actual CHs: PEER0(419) PEER1(419) PEER2(377) PEER3(419) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=12000 B=12000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (12000/12000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12000/12000 1:12000/12000 2:0/0 3:12000/12000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (422). Actual CHs: PEER0(420) PEER1(420) PEER2(377) PEER3(420) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (11900/12100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:11900/12100 1:11900/12100 2:11980/12020 3:11900/12100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (474). Actual CHs: PEER0(472) PEER1(472) PEER2(430) PEER3(472) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (11800/12200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:11800/12200 1:11800/12200 2:11800/12200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (525). Actual CHs: PEER0(523) PEER1(523) PEER2(523) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (11700/12300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:11700/12300 1:11700/12300 2:11700/12300 3:11776/12224 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (577). Actual CHs: PEER0(575) PEER1(575) PEER2(575) PEER3(535) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=13000 B=13000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 67e1590385bcbb8121cfcd3b40519f18d84a4d734bba40f65d69d9b33e0cc95fb12cd4d2d009f869b8ae4b77af7d515f5872298f42753b548b9d7bb2be23fc0c - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 67e1590385bcbb8121cfcd3b40519f18d84a4d734bba40f65d69d9b33e0cc95fb12cd4d2d009f869b8ae4b77af7d515f5872298f42753b548b9d7bb2be23fc0c - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (13000/13000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:13000/13000 1:13000/13000 2:13000/13000 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (578). Actual CHs: PEER0(576) PEER1(576) PEER2(576) PEER3(535) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (12900/13100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12900/13100 1:12900/13100 2:12900/13100 3:12976/13024 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (630). Actual CHs: PEER0(628) PEER1(628) PEER2(628) PEER3(588) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (12800/13200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:12800/13200 2:12800/13200 3:12800/13200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (681). Actual CHs: PEER1(679) PEER2(679) PEER3(679) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (12700/13300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12776/13224 1:12700/13300 2:12700/13300 3:12700/13300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (733). Actual CHs: PEER0(691) PEER1(731) PEER2(731) PEER3(731) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=20000 B=20000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 320c95847134a06b351dc9ff76025904229948f1b2ce0f11e472a44e935be90667e4377abebbf599810ce8855def6d15809caff3706cb1d8733c3d81a7c364ae - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 320c95847134a06b351dc9ff76025904229948f1b2ce0f11e472a44e935be90667e4377abebbf599810ce8855def6d15809caff3706cb1d8733c3d81a7c364ae - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (20000/20000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:20000/20000 2:20000/20000 3:20000/20000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (734). Actual CHs: PEER0(691) PEER1(732) PEER2(732) PEER3(732) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (19900/20100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19976/20024 1:19900/20100 2:19900/20100 3:19900/20100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (786). Actual CHs: PEER0(744) PEER1(784) PEER2(784) PEER3(784) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (19800/20200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19800/20200 2:19800/20200 3:19800/20200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (837). Actual CHs: PEER0(834) PEER2(834) PEER3(834) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (19700/20300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19700/20300 1:19771/20229 2:19700/20300 3:19700/20300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (889). Actual CHs: PEER0(886) PEER1(849) PEER2(886) PEER3(886) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=21000 B=21000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for daa67b0506ca3d39ec1ae426d81351c302d5fefb54af89f7d0b454df8725f9bc61806911266b164b18ccbbe639c124991cc0339496abc89bfb257c036d1a2ea6 - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for daa67b0506ca3d39ec1ae426d81351c302d5fefb54af89f7d0b454df8725f9bc61806911266b164b18ccbbe639c124991cc0339496abc89bfb257c036d1a2ea6 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (21000/21000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21000/21000 1:0/0 2:21000/21000 3:21000/21000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (890). Actual CHs: PEER0(887) PEER1(849) PEER2(887) PEER3(887) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (20900/21100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:20900/21100 1:20971/21029 2:20900/21100 3:20900/21100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (942). Actual CHs: PEER0(939) PEER1(902) PEER2(939) PEER3(939) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (20800/21200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:20800/21200 1:20800/21200 3:20800/21200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (993). Actual CHs: PEER0(990) PEER1(990) PEER3(990) 

RESTART PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (20700/21300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:20700/21300 1:20700/21300 2:20780/21220 3:20700/21300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1045). Actual CHs: PEER0(1042) PEER1(1042) PEER2(1000) PEER3(1042) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=22000 B=22000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (22000/22000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:22000/22000 1:22000/22000 2:0/0 3:22000/22000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1046). Actual CHs: PEER0(1043) PEER1(1043) PEER2(1000) PEER3(1043) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (21900/22100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21900/22100 1:21900/22100 2:21980/22020 3:21900/22100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1098). Actual CHs: PEER0(1095) PEER1(1095) PEER2(1053) PEER3(1095) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (21800/22200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21800/22200 1:21800/22200 2:21800/22200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1149). Actual CHs: PEER0(1145) PEER1(1145) PEER2(1145) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (21700/22300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21700/22300 1:21700/22300 2:21700/22300 3:21765/22235 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1201). Actual CHs: PEER0(1197) PEER1(1197) PEER2(1197) PEER3(1163) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=23000 B=23000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 8870a2ba5e03da9ce8c67f0100d5ff1ece03e2baa7e74fd85f860cb2b81af7b78c37245de855cab063ee5c2942ab975bcadad8737649bb77374b4e7de7ac5fa2 - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 8870a2ba5e03da9ce8c67f0100d5ff1ece03e2baa7e74fd85f860cb2b81af7b78c37245de855cab063ee5c2942ab975bcadad8737649bb77374b4e7de7ac5fa2 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (23000/23000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:23000/23000 1:23000/23000 2:23000/23000 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1202). Actual CHs: PEER0(1198) PEER1(1198) PEER2(1198) PEER3(1163) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (22900/23100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:22900/23100 1:22900/23100 2:22900/23100 3:22965/23035 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1254). Actual CHs: PEER0(1250) PEER1(1250) PEER2(1250) PEER3(1216) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (22800/23200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:22800/23200 2:22800/23200 3:22800/23200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1305). Actual CHs: PEER1(1300) PEER2(1300) PEER3(1300) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (22700/23300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:22778/23222 1:22700/23300 2:22700/23300 3:22700/23300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1357). Actual CHs: PEER0(1311) PEER1(1352) PEER2(1352) PEER3(1352) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=30000 B=30000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 872df1735ec6aa785747ec4a8759f76d1c9f342bd1622b01d664906e29f4f060c74bc4d73d139b3b8192152ff7bebb161edbd593f8b5bc85b9fa48c23c59f184 - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 872df1735ec6aa785747ec4a8759f76d1c9f342bd1622b01d664906e29f4f060c74bc4d73d139b3b8192152ff7bebb161edbd593f8b5bc85b9fa48c23c59f184 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (30000/30000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:30000/30000 2:30000/30000 3:30000/30000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1358). Actual CHs: PEER0(1311) PEER1(1353) PEER2(1353) PEER3(1353) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (29900/30100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29978/30022 1:29900/30100 2:29900/30100 3:29900/30100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1410). Actual CHs: PEER0(1364) PEER1(1405) PEER2(1405) PEER3(1405) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (29800/30200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29800/30200 2:29800/30200 3:29800/30200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1461). Actual CHs: PEER0(1455) PEER2(1455) PEER3(1455) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (29700/30300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29700/30300 1:29769/30231 2:29700/30300 3:29700/30300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1513). Actual CHs: PEER0(1507) PEER1(1471) PEER2(1507) PEER3(1507) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=31000 B=31000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 74408ae3422d67efb60111d70155140f5ee913aeb53b2e244a68ca9dac394060def05228d8ac29ba9e5d750d6531161abdd855dbcf9ba481620e03550ef8f452 - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 74408ae3422d67efb60111d70155140f5ee913aeb53b2e244a68ca9dac394060def05228d8ac29ba9e5d750d6531161abdd855dbcf9ba481620e03550ef8f452 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (31000/31000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31000/31000 1:0/0 2:31000/31000 3:31000/31000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1514). Actual CHs: PEER0(1508) PEER1(1471) PEER2(1508) PEER3(1508) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (30900/31100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30900/31100 1:30969/31031 2:30900/31100 3:30900/31100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1566). Actual CHs: PEER0(1560) PEER1(1524) PEER2(1560) PEER3(1560) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (30800/31200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30800/31200 1:30800/31200 3:30800/31200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1617). Actual CHs: PEER0(1611) PEER1(1611) PEER3(1611) 

RESTART PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (30700/31300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30700/31300 1:30700/31300 2:30782/31218 3:30700/31300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1669). Actual CHs: PEER0(1663) PEER1(1663) PEER2(1620) PEER3(1663) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=32000 B=32000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (32000/32000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:32000/32000 1:32000/32000 2:0/0 3:32000/32000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1670). Actual CHs: PEER0(1664) PEER1(1664) PEER2(1620) PEER3(1664) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (31900/32100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31900/32100 1:31900/32100 2:31982/32018 3:31900/32100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1722). Actual CHs: PEER0(1716) PEER1(1716) PEER2(1673) PEER3(1716) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (31800/32200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31800/32200 1:31800/32200 2:31800/32200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1773). Actual CHs: PEER0(1766) PEER1(1766) PEER2(1766) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (31700/32300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31700/32300 1:31700/32300 2:31700/32300 3:31775/32225 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1825). Actual CHs: PEER0(1818) PEER1(1818) PEER2(1818) PEER3(1779) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=33000 B=33000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 5d9de813f58ceffb6b508efb715fc2220c6cea760cbd142379b8cba07308269917f331ea8c52074a6365a27e86d824d29f4b3109457fbe8c3b5f5f89d97502f2 - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 5d9de813f58ceffb6b508efb715fc2220c6cea760cbd142379b8cba07308269917f331ea8c52074a6365a27e86d824d29f4b3109457fbe8c3b5f5f89d97502f2 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (33000/33000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:33000/33000 1:33000/33000 2:33000/33000 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1826). Actual CHs: PEER0(1819) PEER1(1819) PEER2(1819) PEER3(1779) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (32900/33100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:32900/33100 1:32900/33100 2:32900/33100 3:32975/33025 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1878). Actual CHs: PEER0(1871) PEER1(1871) PEER2(1871) PEER3(1832) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_04_SnIQRnIQDQIQ_CycleAndRepeat.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [55m31.423687546s]  

-----------
----------- go run CAT_04_SnIQRnIQDQIQ_CycleAndRepeat.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 02:38:54 UTC 2016 -----------


----------- go run CAT_05_S1_IQDQIQ_R1_IQIQ_repeats.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 02:38:54 UTC 2016 -----------
-----------

BEGIN  CAT_05_S1_IQDQIQ_R1_IQIQ_repeats.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 02:38:55.773535759 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 02:38:55 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
e73c5dc17c35231ed2a904ccac8fb919fe237c1c871a4e4aa2200f6a05347973
--------> Starting hyperledger PEER0
0452c8adab47185daf2025ded2e94a6665c6cc5ed65a84560768c923415b5249
PEER0 CONTAINERID=0452c8adab47
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
14952e0b91609e4c453461b040eaef5ac054d935514c6012fc71a0c4e4ac4b2f
--------> Starting hyperledger PEER2 <-----------
cccdd44549f3e73d63339db594ec85636c18762e75deda4f520fb962fa8f2d2e
--------> Starting hyperledger PEER3 <-----------
2c27246b9bf2a12092e7a3adf18dfa5e02670655fb9c0f31069d43cf92066447
--------> Printing list of Docker Containers
2c27246b9bf2 cccdd44549f3 14952e0b9160 0452c8adab47
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 0452c8adab47   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 14952e0b9160   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID cccdd44549f3   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 2c27246b9bf2   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "ILqzUK+mq+d9mELjpAiYXZpU4Ze9hHQIexkbwguUjPQ="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "8VNpJ33PDKhV/dPYTdot/E6IyGmBBVX+Fjc2rr/fAWM="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "7wievENnVaENDAZYmXbeKl/bksHlbVWhlLCkAYxD+P8="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "93nzLKh7d42ODZsYZMA7Kd2BR0tM8LIgn+V4VXJFKkQ="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER0(57) PEER2(57) PEER3(57) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=10000 B=1000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 1/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (10000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10000/1000 2:10000/1000 3:10000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER0(58) PEER2(58) PEER3(58) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 1/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (9900/1100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9900/1100 2:9900/1100 3:9900/1100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(109) PEER2(109) PEER3(109) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (9800/1200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9800/1200 1:9800/1200 2:9800/1200 3:9800/1200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (161). Actual CHs: PEER0(161) PEER1(161) PEER2(161) PEER3(161) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (9700/1300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9700/1300 2:9700/1300 3:9700/1300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (212). Actual CHs: PEER0(212) PEER2(212) PEER3(212) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=20000 B=2000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 2/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (20000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:20000/2000 2:20000/2000 3:20000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (213). Actual CHs: PEER0(213) PEER2(213) PEER3(213) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 2/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (19900/2100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19900/2100 2:19900/2100 3:19900/2100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (264). Actual CHs: PEER0(264) PEER2(264) PEER3(264) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (19800/2200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19800/2200 1:19800/2200 2:19800/2200 3:19800/2200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (316). Actual CHs: PEER0(316) PEER1(316) PEER2(316) PEER3(316) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (19700/2300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19700/2300 2:19700/2300 3:19700/2300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (367). Actual CHs: PEER0(367) PEER2(367) PEER3(367) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=30000 B=3000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 3/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (30000/3000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30000/3000 2:30000/3000 3:30000/3000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (368). Actual CHs: PEER0(368) PEER2(368) PEER3(368) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 3/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (29900/3100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29900/3100 2:29900/3100 3:29900/3100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (419). Actual CHs: PEER0(419) PEER2(419) PEER3(419) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (29800/3200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29800/3200 1:29800/3200 2:29800/3200 3:29800/3200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (471). Actual CHs: PEER0(471) PEER1(471) PEER2(471) PEER3(471) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_05_S1_IQDQIQ_R1_IQIQ_repeats.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=false) [18m5.622451612s]  

-----------
----------- go run CAT_05_S1_IQDQIQ_R1_IQIQ_repeats.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 02:57:01 UTC 2016 -----------


----------- go run CAT_06_S1_IQDQIQ_R1_IQ_S2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 02:57:01 UTC 2016 -----------
-----------

BEGIN  CAT_06_S1_IQDQIQ_R1_IQ_S2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 02:57:02.699367269 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 02:57:02 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
6cf3e42b4e8b2d0ab808f7254bb9c90370c87afb8b368b0b83049153e02f6851
--------> Starting hyperledger PEER0
233cb626c86f012e5546db5a363b0e59b2034604397e337558c1338443132165
PEER0 CONTAINERID=233cb626c86f
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
99dde63dad5c6f4eb4fe2fdec3a8fd7646675979fb69770778a6c80dc127ca2b
--------> Starting hyperledger PEER2 <-----------
8d0c9d992d609f3c398d42a9d51b5c490738e625a6f5961972c558ffbefecd78
--------> Starting hyperledger PEER3 <-----------
92ed05fe57010a2b2646137857ea5d7a91d419b335dc03243cd8e5bd52a82275
--------> Printing list of Docker Containers
92ed05fe5701 8d0c9d992d60 99dde63dad5c 233cb626c86f
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 233cb626c86f   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 99dde63dad5c   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 8d0c9d992d60   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 92ed05fe5701   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
user: type secret: GOLANG



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "nO/758K7UT9enO9YgD8iUF8XT27cqWj1JWdXBljkS00="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "uHfD85+WmmVQvGpZT4xFr29zNBOQ4ijXebaXvysDHTk="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "Bmebs785eMefQlZIDbtNf/YQ0wn9MaB2qbwHYlGWYRk="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "VkRAvk/90O6W4QvV6xm+eRzyjpAgLzpUhqwzyko5rps="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER1
Sleep 15 secs

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(1) + queuedBlocks(0)
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (7): + newBlocks(1) + queuedBlocks(0)
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (8): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999993, B=1000007.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999993, B=1000007.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999993, B=1000007.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999993/1000007) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999993/1000007 2:999993/1000007 3:999993/1000007 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (9). Actual CHs: PEER0(9) PEER2(9) PEER3(9) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000 B=1000
Sleep 120 secs, after deployed, txId=5c1bcba0a69192198a6fae36cf26d23c6baf1de3d411285a569514096490ff4ab1e72f52715848882ad3bf77d7ba7c2fda129de3c8785a79943e44306ea407ab
Increment current ChainHeightBlockCount (9): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASS on PEER0: QUERY RESULTS MATCH expected values: A=1000, B=1000.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=1000, B=1000.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=1000, B=1000.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (10): + newBlocks(1) + queuedBlocks(0)
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (11): + newBlocks(1) + queuedBlocks(0)
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (12): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASS on PEER0: QUERY RESULTS MATCH expected values: A=997, B=1003.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=997, B=1003.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=997, B=1003.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

RESTART PEERS():  PEER1
Sleep 30 secs
>>> Sleep extra 60 secs because deploy occurred while peer was stopped <<<

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (13): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (26): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (39): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (52): + newBlocks(13) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASS on PEER0: QUERY RESULTS MATCH expected values: A=897, B=1103.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=897, B=1103.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=897, B=1103.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=897, B=1103.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:897/1103 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (65). Actual CHs: PEER0(65) PEER1(65) PEER2(65) PEER3(65) 

STOP PEERS():  PEER2
Sleep 15 secs

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (65): + newBlocks(1) + queuedBlocks(0)
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (66): + newBlocks(1) + queuedBlocks(0)
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (67): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 2 and Invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=894, B=1106.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=894, B=1106.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=894, B=1106.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (894/1106) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:894/1106 1:894/1106 3:894/1106 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (68). Actual CHs: PEER0(68) PEER1(68) PEER3(68) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_06_S1_IQDQIQ_R1_IQ_S2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=false) [7m20.605963836s]  

-----------
----------- go run CAT_06_S1_IQDQIQ_R1_IQ_S2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 03:04:23 UTC 2016 -----------


----------- go run CAT_07_S1_IQDQIQ_R1_IQ_S0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 03:04:23 UTC 2016 -----------
-----------

BEGIN  CAT_07_S1_IQDQIQ_R1_IQ_S0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 03:04:24.663018465 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 03:04:24 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
a805a3ccb795586a287cf4ff91766002abafca2ac7b0cd7b3ca4c23e5adde53d
--------> Starting hyperledger PEER0
0dac6e24bdf4f24e5539f7f6f7140254a89a88130cbdb52c50e44700de7dee19
PEER0 CONTAINERID=0dac6e24bdf4
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
381debc5366c8d41fc2c6309e01f043fba90ee5cbf28f668971e7fd612319528
--------> Starting hyperledger PEER2 <-----------
a7f1b22adcf990397b4803e100eb111eaba63cc6e921e814be6df4b8b42e2b18
--------> Starting hyperledger PEER3 <-----------
e1290758325dc55055e25463afbfb841d3f352c55e0a10584197eb6af69ed245
--------> Printing list of Docker Containers
e1290758325d a7f1b22adcf9 381debc5366c 0dac6e24bdf4
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 0dac6e24bdf4   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 381debc5366c   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID a7f1b22adcf9   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID e1290758325d   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
user: type secret: GOLANG


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "0iI5BR3A665MhPuGNYsJuULT409l07uyxq5+0Mu8xsw="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "IQysbp3SxCfRO3bul4Zq28WSqd653O+m8Las7MfRuI4="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "ct3FE7IMlVze+nWHZfU0tGdvoMgQfKnldxUpk3ywBsM="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "XRzDQxGnMt2mWW2r3Cb+nKpv78ATb9qorbKzhyAu8pA="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999993/1000007) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999993/1000007 2:999993/1000007 3:999993/1000007 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (9). Actual CHs: PEER0(9) PEER2(9) PEER3(9) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000 B=1000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:897/1103 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (65). Actual CHs: PEER0(65) PEER1(65) PEER2(65) PEER3(65) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (797/1203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:797/1203 2:797/1203 3:797/1203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (116). Actual CHs: PEER1(116) PEER2(116) PEER3(116) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_07_S1_IQDQIQ_R1_IQ_S0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [8m19.577430315s]  

-----------
----------- go run CAT_07_S1_IQDQIQ_R1_IQ_S0_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 03:12:44 UTC 2016 -----------


----------- go run CAT_08_S0_IQDQIQ_R0_IQIQ_repeats.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 03:12:44 UTC 2016 -----------
-----------

BEGIN  CAT_08_S0_IQDQIQ_R0_IQIQ_repeats.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 03:12:45.654684388 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 03:12:45 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
fe05fb8199aac0700c7d5a24ad5af66875380970aeb9761719af822be0b06c49
--------> Starting hyperledger PEER0
0d62fdf3a190077618ce0c71d3c809741f0a411df815e610ffbdbb400c3fd835
PEER0 CONTAINERID=0d62fdf3a190
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
11d83cf5d689786d8b70a2dcbed66c6570d8c4e555009e7ccd2e1a513086cd46
--------> Starting hyperledger PEER2 <-----------
fb2ba7afa9be171ff08e3dfe7742921919d7ad6c0aef8f40200a2d6523f8904a
--------> Starting hyperledger PEER3 <-----------
827b79eb461d043411fd38c023d99a027707839d00a39f68b5e84c2224db6703
--------> Printing list of Docker Containers
827b79eb461d fb2ba7afa9be 11d83cf5d689 0d62fdf3a190
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 0d62fdf3a190   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 11d83cf5d689   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID fb2ba7afa9be   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 827b79eb461d   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "txwRaAmSfW4eThyK7Xh6C/HRk11HbIt5WPuCPc5FKdQ="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "Wjy82YEsdeIiftxvEAV2+CKwuQVCQ1JxuEbcUAhntC4="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "xF6mWp7C1SiYBvaOeIcODKgdp2IDDuH5rQBz2M0SrdA="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "MSNdYHq0ShzH9FeiGEMuMZ06ok9DzcdqC3N0dGaiwmc="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000 B=1000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 1/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(58) PEER2(58) PEER3(58) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 1/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (61). Actual CHs: PEER1(61) PEER2(61) PEER3(61) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:981/1019 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(69) PEER1(113) PEER2(113) PEER3(113) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (797/1203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:797/1203 2:797/1203 3:797/1203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (164). Actual CHs: PEER1(164) PEER2(164) PEER3(164) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=2000 B=2000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 2/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (2000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:2000/2000 2:2000/2000 3:2000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (165). Actual CHs: PEER1(165) PEER2(165) PEER3(165) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 2/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (1997/2003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1997/2003 2:1997/2003 3:1997/2003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (168). Actual CHs: PEER1(168) PEER2(168) PEER3(168) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (1897/2103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:1973/2027 1:1897/2103 2:1897/2103 3:1897/2103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (220). Actual CHs: PEER0(180) PEER1(220) PEER2(220) PEER3(220) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (1797/2203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1797/2203 2:1797/2203 3:1797/2203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (271). Actual CHs: PEER1(271) PEER2(271) PEER3(271) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=3000 B=3000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 3/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (3000/3000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:3000/3000 2:3000/3000 3:3000/3000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (272). Actual CHs: PEER1(272) PEER2(272) PEER3(272) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 3/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (2997/3003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:2997/3003 2:2997/3003 3:2997/3003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (275). Actual CHs: PEER1(275) PEER2(275) PEER3(275) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (2897/3103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:2966/3034 1:2897/3103 2:2897/3103 3:2897/3103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (327). Actual CHs: PEER0(291) PEER1(327) PEER2(327) PEER3(327) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_08_S0_IQDQIQ_R0_IQIQ_repeats.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [20m4.213831508s]  

-----------
----------- go run CAT_08_S0_IQDQIQ_R0_IQIQ_repeats.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 03:32:49 UTC 2016 -----------


----------- go run CAT_09_S0_IQDQIQ_R0_IQ_S2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 03:32:49 UTC 2016 -----------
-----------

BEGIN  CAT_09_S0_IQDQIQ_R0_IQ_S2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 03:32:51.199154287 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 03:32:51 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
38401a41ee10094deaa3929693d00501bf058291031478680295c5a0b060d43d
--------> Starting hyperledger PEER0
ad345b6ee77717191ca564fe77c49857d42e3aac13f7b555923d8257b703c622
PEER0 CONTAINERID=ad345b6ee777
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
c4ba97b85ba9c81e338951be7d113e695d33dfba0fca1b31b08ea43d51f46e30
--------> Starting hyperledger PEER2 <-----------
d4dfa655a9dc2d6fb640f5194fcb175b6154fb66908d57022f1c6e8f2e26e50f
--------> Starting hyperledger PEER3 <-----------
606ac7cbddecc770740820c21f6cfb3e160d03f88c81d618722abe225c46ca5d
--------> Printing list of Docker Containers
606ac7cbddec d4dfa655a9dc c4ba97b85ba9 ad345b6ee777
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID ad345b6ee777   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID c4ba97b85ba9   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID d4dfa655a9dc   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 606ac7cbddec   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05



Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "3080eBHzE5vl3TyIGR8qljz5cE7V0VTOgzMeAdAcmGA="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "pl6pVsMrAoo9l7lAHnFHMhGEG+5sdZnwnnRliHmKTtQ="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "FiHYQcZ37k7Oq1lvyZJc4gB81F1lJg+M+b513P2EUw4="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "qslfaOWluMSD83lJXsQhzRMkYcNRewzJGadsapUMEUU="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000 B=1000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(58) PEER2(58) PEER3(58) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (61). Actual CHs: PEER1(61) PEER2(61) PEER3(61) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:981/1019 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(69) PEER1(113) PEER2(113) PEER3(113) 

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (797/1203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:797/1203 1:797/1203 3:797/1203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (164). Actual CHs: PEER0(164) PEER1(164) PEER3(164) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_09_S0_IQDQIQ_R0_IQ_S2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [9m29.715333588s]  

-----------
----------- go run CAT_09_S0_IQDQIQ_R0_IQ_S2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 03:42:20 UTC 2016 -----------


----------- go run CAT_10_S0_IQDQIQ_R0_IQ_S1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 03:42:20 UTC 2016 -----------
-----------

BEGIN  CAT_10_S0_IQDQIQ_R0_IQ_S1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 03:42:22.191356862 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 03:42:22 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
4f44f2e0d0d240478a3adfceba72b0045c199a398c70ca382d52ec16b0a38f36
--------> Starting hyperledger PEER0
f1a7da41520329198c3ca42c4687b1759d75e82f76c7d45978d49d05d3a31c31
PEER0 CONTAINERID=f1a7da415203
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
85d61dd61d39f17093f7df39f075d33aa219bb6848d3921ad1517dc9c6e21359
--------> Starting hyperledger PEER2 <-----------
d0eed41e2a5c8364c32e00983f8fb22e9e471f7c96a9a061c2b490af47fe6139
--------> Starting hyperledger PEER3 <-----------
15009db7e2e7b632303393bdd9bab64631aff22626a89556880705ced46a3f4d
--------> Printing list of Docker Containers
15009db7e2e7 d0eed41e2a5c 85d61dd61d39 f1a7da415203
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID f1a7da415203   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 85d61dd61d39   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID d0eed41e2a5c   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 15009db7e2e7   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05



Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "ubgypqKyr97QbCq837Iav7CNQiZSIP7cZX7xua9jEDo="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "sm0z+eXa99nz2s/niw4LTExSt5Sqy5NkOcGlO0CUamI="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "iHhLhxFgh7goWLHLCE2oIwjPF2FtlkclON4IebUEHRI="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "sDQK8Xzxq6Kaf9EoQ9DNEse8xrvX5bpBfM9+V4Nm9vM="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000 B=1000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(58) PEER2(58) PEER3(58) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (61). Actual CHs: PEER1(61) PEER2(61) PEER3(61) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:981/1019 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(69) PEER1(113) PEER2(113) PEER3(113) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (797/1203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:797/1203 2:797/1203 3:797/1203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (164). Actual CHs: PEER0(163) PEER2(163) PEER3(163) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_10_S0_IQDQIQ_R0_IQ_S1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [8m56.692208586s]  

-----------
----------- go run CAT_10_S0_IQDQIQ_R0_IQ_S1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 03:51:18 UTC 2016 -----------


----------- go run CAT_11_S2S1_IQDIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 03:51:18 UTC 2016 -----------
-----------

BEGIN  CAT_11_S2S1_IQDI.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 03:51:20.234798914 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 03:51:20 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
12a28516e49b4d0e473743e4eb769c36ad6c225815a26903981126d4a6a23a42
--------> Starting hyperledger PEER0
68e0579fb7685923996f8a3089f2e37386fcbf496c96541a5fe2783315780444
PEER0 CONTAINERID=68e0579fb768
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
09e5ccd0f08f5740b02a380d04e16b49a33caa6a101dde76ab7783e83ad87e49
--------> Starting hyperledger PEER2 <-----------
e01dd4bacb50e67b32cc52e431da3f704eb204a35d2767417f7a294b269d8c0b
--------> Starting hyperledger PEER3 <-----------
71df985de0e4f476c2bff9492825ee62f5a0b08c8276de204688f8956ce7ab6f
--------> Printing list of Docker Containers
71df985de0e4 e01dd4bacb50 09e5ccd0f08f 68e0579fb768
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 68e0579fb768   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 09e5ccd0f08f   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID e01dd4bacb50   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 71df985de0e4   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "lgQOvDNOwhMMHPtcClQe9l/H0cDjw3M8N811Nv7McRQ="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "bS5BKShtUXjzfd5UKA8WKn9ASyJ9PkWtE7Tviw8+XVI="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "uHcFwgN2TCKWjDCpCneITGbfkDa9kvN4l+NgOfkXwfQ="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "GYVv0rv8vQsHyos8ICiGEo5dXBjVvX+BbUdKxwyC84Q="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER2  PEER1

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2 and 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999994/1000006). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Deploy and Invoke, without consensus
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (4998/5002). ACTUALs (node:A/B): 0:0/0 3:0/0 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

PASSED CAT_11_S2S1_IQDI.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [4m51.936694714s]  

-----------
----------- go run CAT_11_S2S1_IQDIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 03:56:12 UTC 2016 -----------


----------- go run CAT_12_S0S1_IQDI.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 03:56:12 UTC 2016 -----------
-----------

BEGIN  CAT_12_S0S1_IQDI.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 03:56:13.490885339 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 03:56:13 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
7bd81eabc1688f6b6a9c317520202d4f52f283fabe8e2c4a67b64c1530963178
--------> Starting hyperledger PEER0
f0f62327b1029f6d7df1a2ad119d027a03e098b56f166c0d8e6585aac51e9a5c
PEER0 CONTAINERID=f0f62327b102
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
87e91fd76a2838704b6f24372f39b52b956e7f7a75d989508c1b7557bfc6ca6f
--------> Starting hyperledger PEER2 <-----------
f591ae5cb65fa672f8977949450a760c690040688b4a5b6902539f6565fde207
--------> Starting hyperledger PEER3 <-----------
8aa058e6994da96fc26c13d4f6c7177ed5b18689ca62a44361cbbc107da5d012
--------> Printing list of Docker Containers
8aa058e6994d f591ae5cb65f 87e91fd76a28 f0f62327b102
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID f0f62327b102   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 87e91fd76a28   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID f591ae5cb65f   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 8aa058e6994d   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "ypXA/lMFqHrm8xAvwC+qGh8Oy9NAXQRZDpTBiZ6mDdY="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "SP0GJVV+6TTNbTppJ97DNTjzUHkTENVz710zQ0ZNUA4="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "G7x6x4brnPJMYXjiY/drg6T46WyGP/RNbxhVeGJA/MQ="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "SyGeNcYqrX/jC0fXdgBzVLs6R5/ZOsQRgAXi+iBCmcA="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0  PEER1

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 0 and 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999994/1000006). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER2(6) PEER3(6) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

PASSED CAT_12_S0S1_IQDI.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [5m11.790806617s]  

-----------
----------- go run CAT_12_S0S1_IQDI.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:01:25 UTC 2016 -----------


----------- go run CAT_13_S2_IQDQIQ_S1_IQDD.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:01:25 UTC 2016 -----------
-----------

BEGIN  CAT_13_S2_IQDQIQ_S1_IQDD.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:01:26.614936823 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:01:26 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
6051bb69f75f7273c03445d9823ceb6901825c736a032f78888b752d7c6df56a
--------> Starting hyperledger PEER0
ca9a3d92666066377dae46c534527e554e430331322fb2241b9a595b974bbd46
PEER0 CONTAINERID=ca9a3d926660
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
d65918f6618f132eab1151b8b8e3ae5a3c7c53043a13e94003f6bbc92614f044
--------> Starting hyperledger PEER2 <-----------
0bb87af38dc79237e0f2d9c5a0b71f1d1479159939a6a570370dbbc61b91591c
--------> Starting hyperledger PEER3 <-----------
82c424ecfcec0062b539aba5422ffe4816fa9b3c63f75150ed8734707d35044e
--------> Printing list of Docker Containers
82c424ecfcec 0bb87af38dc7 d65918f6618f ca9a3d926660
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID ca9a3d926660   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID d65918f6618f   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 0bb87af38dc7   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 82c424ecfcec   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
user: type secret: GOLANG



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "tLs0vbVzwnopSXgRp/UVEGfkmMV0LtdkwEVfGlRpM+c="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "A/LkAj+jsmmVtNXSHgW9CYh3v5qFiU5e/cXsya4WKZM="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "YkldVUTxNSSZb1VGGpYXAeQjDuh2ocFNvxfIFA8/m0E="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "3roZwjR/BQLOR5o5LIMhAPzywlETIE3C0z3Y7+vDaDY="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs total (200) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 2, and Invokes
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999796/1000204 1:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER0(106) PEER1(106) PEER3(106) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=2000 B=2000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (2000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:2000/2000 1:2000/2000 3:2000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER0(107) PEER1(107) PEER3(107) 

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (1997/2003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:1997/2003 1:1997/2003 3:1997/2003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER0(110) PEER1(110) PEER3(110) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (200) spread among all 2 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after also STOP PEER 1, and Invokes, but not enough peers for consensus are running.
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (1797/2203). ACTUALs (node:A/B): 0:1997/2003 3:1997/2003 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (110). Actual CHs: PEER0(110) PEER3(110) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=3000 B=3000

POST/Chaincode: DEPLOY chaincode on PEER3, A=4000 B=4000

PASSED CAT_13_S2_IQDQIQ_S1_IQDD.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [9m52.291371579s]  

-----------
----------- go run CAT_13_S2_IQDQIQ_S1_IQDD.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:11:18 UTC 2016 -----------


----------- go run CAT_14_S0_IQDQIQ_S1_IQDD.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:11:18 UTC 2016 -----------
-----------

BEGIN  CAT_14_S0_IQDQIQ_S1_IQDD.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:11:20.211570406 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:11:20 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
a43445e3ccc2f7607568cfe4054dab156d10053ddee3bd3c0cdf6a302278234d
--------> Starting hyperledger PEER0
35847353de8e1118669d9eb24a126d586ad4f1a44719650f0cf9373491705725
PEER0 CONTAINERID=35847353de8e
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
a50018a60736b529df25190de8fb0d69243c17528de82b03090ecbb7639f254b
--------> Starting hyperledger PEER2 <-----------
7df1e94de7c43a72ef5fb3d975808414b97199082302b16ee6a155df849e6b40
--------> Starting hyperledger PEER3 <-----------
205491ccc4677966b5a6ae429cc0490d1d52d9abb649c023a2ac96e859b04349
--------> Printing list of Docker Containers
205491ccc467 7df1e94de7c4 a50018a60736 35847353de8e
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 35847353de8e   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a50018a60736   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 7df1e94de7c4   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 205491ccc467   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "csOzGXw+LESKDQQkzqx9ml4dUfcolxQ90NfKRwMo6Gs="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "dE3aXqKutkMGPqHNbLegB8MAAZQQ5gPlOWyrUC9L7gM="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "qqf98IpzmroD274NK7dNWC2Hdwv136JR3bBnGhcocfg="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "8WiDiOzIoV0sI4zyvvOWZq/9I/ChNUKQEdGisoVwFrE="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0, and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=2000 B=2000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (2000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:2000/2000 2:2000/2000 3:2000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(58) PEER2(58) PEER3(58) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (1900/2100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1900/2100 2:1900/2100 3:1900/2100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER1(109) PEER2(109) PEER3(109) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (200) spread among all 2 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after also STOP PEER 1, and Invokes, but not enough peers for consensus are running.
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (1700/2300). ACTUALs (node:A/B): 2:1900/2100 3:1900/2100 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (109). Actual CHs: PEER2(109) PEER3(109) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=3000 B=3000

POST/Chaincode: DEPLOY chaincode on PEER3, A=4000 B=4000

PASSED CAT_14_S0_IQDQIQ_S1_IQDD.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [10m33.187663701s]  

-----------
----------- go run CAT_14_S0_IQDQIQ_S1_IQDD.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:21:53 UTC 2016 -----------


----------- go run CAT_15_S1_IQ_S2_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:21:53 UTC 2016 -----------
-----------

BEGIN  CAT_15_S1_IQ_S2_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:21:54.654055621 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:21:54 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
8497e5da84f1d77322d4fedaa3f50c7c3a24be6bb9ff324132d322ba779a157b
--------> Starting hyperledger PEER0
64e3fc39c4aee5217cb3d9c7e01a9b10f55d66c7b8a90d5fde2a2f479207cf10
PEER0 CONTAINERID=64e3fc39c4ae
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
3ae90d64b8a54c01a6d2e7ec16f50b23ce4aa921bd420d3b17e456ee48dd5670
--------> Starting hyperledger PEER2 <-----------
e9fa02515aa61c49d4f67f9e9ed816270ff227b040560552703aed07472ffe39
--------> Starting hyperledger PEER3 <-----------
041c6af76fea8d740336d60b01cb5145a1c88ab58de0df3e80320180806ae96c
--------> Printing list of Docker Containers
041c6af76fea e9fa02515aa6 3ae90d64b8a5 64e3fc39c4ae
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 64e3fc39c4ae   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 3ae90d64b8a5   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID e9fa02515aa6   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 041c6af76fea   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "YcZCgXXNqbA8SL8jDB/2BtIMN2Ihl7zvja8pn+PZ1tY="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "vMSrcJ4QwE/SrUguxhmob6E2jti86zgd3HuDTHuDIJM="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "LPAeta4MQBl1jP5RSF9m60dc5YbxeuU5IbZMETXssm4="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "ZmmItr3DRiP4KOAYMW9Sc3/tYAG9FF3kzRwyvRt6aMY="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999983/1000017) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999983/1000017 2:999983/1000017 3:999983/1000017 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

STOP PEERS():  PEER2

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers
Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999883/1000117) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999883/1000117 1:999883/1000117 3:999883/1000117 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (64). Actual CHs: PEER0(64) PEER1(64) PEER3(64) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_15_S1_IQ_S2_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [4m30.450408052s]  

-----------
----------- go run CAT_15_S1_IQ_S2_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:26:25 UTC 2016 -----------


----------- go run CAT_16_S2_IQ_S1_IQ_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:26:25 UTC 2016 -----------
-----------

BEGIN  CAT_16_S2_IQ_S1_IQ_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:26:26.392032065 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:26:26 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
0c1dc12739f9596314c959da880c9a0a190b295579708a48590bd0a12d065c0d
--------> Starting hyperledger PEER0
875f95acba916a20cfb2f12fdadf2d3d4313cb41322bc660532cc0f427236933
PEER0 CONTAINERID=875f95acba91
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
fd5398960886931f7b996a3544f9c751c9f90698bf31cc321c9f99375471997b
--------> Starting hyperledger PEER2 <-----------
8eb773da65792b3a52e4bf50b043c8420d2a9f346590ac560b4f0b651e818d2e
--------> Starting hyperledger PEER3 <-----------
08be1f33f5560e2fb3bf0c1906dbd05e6bd1387a5db1312b8dea466b0e626161
--------> Printing list of Docker Containers
08be1f33f556 8eb773da6579 fd5398960886 875f95acba91
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 875f95acba91   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID fd5398960886   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 8eb773da6579   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 08be1f33f556   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
user: type secret: GOLANG


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "cSDs/pcrvFYIyaa9LiXbdBulyOlUBs/IMOhXrTy2zRQ="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "6tkgHtPaVBVNfivbR2u1GvLOsAFtYxXGUfivTsr3kCE="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "8Qi9EbFc/qEF3+u9QYyIyS/DtWLlGxC11ivohpnyTzY="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "BMn72CMjBxRrWunurV9HHZDA8T6oO0Tw9Z7BjMHumwM="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER2

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 2, and Invokes
PASSED QUERY TEST: Expected A/B (999985/1000015) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999985/1000015 1:999985/1000015 3:999985/1000015 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (12). Actual CHs: PEER0(12) PEER1(12) PEER3(12) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 2 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after also STOP PEER 1 and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999885/1000115). ACTUALs (node:A/B): 0:999985/1000015 3:999985/1000015 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (12). Actual CHs: PEER0(12) PEER3(12) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers
Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, after Invokes 
PASSED QUERY TEST: Expected A/B (999785/1000215) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999785/1000215 1:999785/1000215 3:999785/1000215 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(113) PEER1(113) PEER3(113) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_16_S2_IQ_S1_IQ_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [4m42.949170323s]  

-----------
----------- go run CAT_16_S2_IQ_S1_IQ_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:31:09 UTC 2016 -----------


----------- go run CAT_17_S1_IQ_S0_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:31:09 UTC 2016 -----------
-----------

BEGIN  CAT_17_S1_IQ_S0_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:31:10.627649129 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:31:10 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
17c13495bcc7fd2ca0579769e1fe1c22910905a0448fed014586acf560e2e35c
--------> Starting hyperledger PEER0
4ac7971dcec8462ff532af69f0a58502e50a8cf64f26cd171742fced4dd4082a
PEER0 CONTAINERID=4ac7971dcec8
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
7d0d15e9719b474a7ea8aae17e31ce364da1d6e80e433921a500017c71f90029
--------> Starting hyperledger PEER2 <-----------
e80e1a3b6d608277e5ef1b070918182536540d6a1ac2ab0e5a746c9f58f37119
--------> Starting hyperledger PEER3 <-----------
cef03602168b5e3bf27ffbe8b873b577a7ef4f33f7436d6364cf7b3351694128
--------> Printing list of Docker Containers
cef03602168b e80e1a3b6d60 7d0d15e9719b 4ac7971dcec8
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 4ac7971dcec8   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 7d0d15e9719b   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID e80e1a3b6d60   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID cef03602168b   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "rdngIxtS5CebVpHy/+bf4spL5BkEI8RBm8fnPRdz9pM="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "+hJbuitE1S8RV67f+YGRHlTDcW5imzqQoXhnwyzSk+s="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "FoKm4opvRBKiyza1iyZ5T5IQ0Eni6VH3+96nFA0SVMc="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "zFglhQbiJ0UpOrsexKO6cJOGGXbmXRt42zbtDLukoHE="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1, and Invokes
PASSED QUERY TEST: Expected A/B (999983/1000017) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999983/1000017 2:999983/1000017 3:999983/1000017 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

STOP PEERS():  PEER0

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers
Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Restart PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999883/1000117) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999883/1000117 2:999883/1000117 3:999883/1000117 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (64). Actual CHs: PEER0(64) PEER2(64) PEER3(64) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_17_S1_IQ_S0_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [5m20.070041826s]  

-----------
----------- go run CAT_17_S1_IQ_S0_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:36:30 UTC 2016 -----------


----------- go run CAT_18_S0_IQ_S1_IQ_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:36:30 UTC 2016 -----------
-----------

BEGIN  CAT_18_S0_IQ_S1_IQ_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:36:32.032600559 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:36:32 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
b46a7cfb71713152af0c579c2c520314a4712a456a0ace3bae96fc7e0e645334
--------> Starting hyperledger PEER0
4b0edc30a956c14ed979c923dff9f72fc2d53aefa214aa3b9bf932fde2041e5a
PEER0 CONTAINERID=4b0edc30a956
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
2295baec6ef47657b042ad02f1ecb96b46ef96ebbe09e448a9f43a9ffd8ed546
--------> Starting hyperledger PEER2 <-----------
5a0d9bf72e15597424274a0feab0957e1e137b0b6799ff689f755f786b468042
--------> Starting hyperledger PEER3 <-----------
48e86441432c161aa8ff9c70a03b4203e9d76e2de6a40a11ec42ef4c1dc2ad78
--------> Printing list of Docker Containers
48e86441432c 5a0d9bf72e15 2295baec6ef4 4b0edc30a956
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 4b0edc30a956   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 2295baec6ef4   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 5a0d9bf72e15   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 48e86441432c   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "TXQHo9Tru5JfU6myCD3zonquu2ORhpDpDYT6Kbz/L8A="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "STLTkwWlycwU2rpF2eQADgnzMBRcJHVUVKQuChLorik="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "Umj8GYcqZwVEARS9ibdDkTkUPgjj/YekWs0DSdOlTp4="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "rO3Okz9HMTTscdcwQywC2BbxxcpcBQWi3meI1Ml2x+Q="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0
Sleep extra 30 secs

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

STOP PEERS():  PEER1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after also STOP PEER 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999884/1000116). ACTUALs (node:A/B): 2:999896/1000104 3:999896/1000104 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (57). Actual CHs: PEER2(57) PEER3(57) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers
Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, after Restart PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999784/1000216) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999784/1000216 2:999784/1000216 3:999784/1000216 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (108). Actual CHs: PEER0(114) PEER2(114) PEER3(114) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_18_S0_IQ_S1_IQ_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [6m24.920754131s]  

-----------
----------- go run CAT_18_S0_IQ_S1_IQ_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:42:56 UTC 2016 -----------


----------- go run CAT_19_S2S1_IQ_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:42:56 UTC 2016 -----------
-----------

BEGIN  CAT_19_S2S1_IQ_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:42:58.314644462 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:42:58 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
4900941e64032f5fb2a6e69bd784d923bfc3772308705520248123f1acbb2b0c
--------> Starting hyperledger PEER0
419f503a1bab1350f2190fb48c72ec4d582dfec4d7e4c813d9669e979b853218
PEER0 CONTAINERID=419f503a1bab
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
9a9758504dcb527d557128a3e339174a91c40d6a3ebe125882f4c2881d7c4767
--------> Starting hyperledger PEER2 <-----------
1c1474cfe2e7fa5f153a47ae03ef193dbe994b67410ec8651f02389379fffa47
--------> Starting hyperledger PEER3 <-----------
cb016de6d75b7104520a31a4c978a1527fef8539863f5d41774cfa747b663c64
--------> Printing list of Docker Containers
cb016de6d75b 1c1474cfe2e7 9a9758504dcb 419f503a1bab
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 419f503a1bab   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 9a9758504dcb   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1c1474cfe2e7   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID cb016de6d75b   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "2VaN3sfae+PdKk/SQHpKa2vgQWLyr62XkacMj7HrUg8="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "zhbeP7LfApZ5Ff5cTgJ369Pe67YhtKemZUCxwdQVmSo="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "8zpa3sCkxgnc1cF67BhhDfnw2nGol1ptNQzOLxRbvro="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "uL0SnJhL8w1ln6DVu5F1EJVRo5zaREx+iq1KxfdXg8A="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER2  PEER1

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999987/1000013). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restart PEER 1, and Invokes 
PASSED QUERY TEST: Expected A/B (999887/1000113) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999887/1000113 1:999887/1000113 3:999887/1000113 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (62). Actual CHs: PEER0(62) PEER1(62) PEER3(62) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_19_S2S1_IQ_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [3m45.309565576s]  

-----------
----------- go run CAT_19_S2S1_IQ_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:46:43 UTC 2016 -----------


----------- go run CAT_20_S2S1_IQ_R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:46:43 UTC 2016 -----------
-----------

BEGIN  CAT_20_S2S1_IQ_R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:46:44.949144072 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:46:44 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
1aaaf577804eb21f5cfe846c73435674e4116fc65a31106e0084ca11715ada0a
--------> Starting hyperledger PEER0
036992eed2dacc75380e610bb306485ed4f056ecada19a1cf5e37eb4b089af40
PEER0 CONTAINERID=036992eed2da
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
3f09625e05ea81432a09e9cea6a392107ff47a9351869a7afdca4fe82ded5e71
--------> Starting hyperledger PEER2 <-----------
0b489a87aeb6f72600bbebfdb535721388ca14fd92c96a0d7e102c76f157866e
--------> Starting hyperledger PEER3 <-----------
5a2eac14e1cdb86119dcb6ac85507c56f8c978ff632666765526b7a838eff929
--------> Printing list of Docker Containers
5a2eac14e1cd 0b489a87aeb6 3f09625e05ea 036992eed2da
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 036992eed2da   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 3f09625e05ea   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 0b489a87aeb6   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 5a2eac14e1cd   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "/yGXOCr5OvxsnfjxyC4m/YQkSZi4tqABcYBkghlUkgU="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "qaLykLenam9GlrgrsIdqnzSl07EbZxE8uokEzZxlvmc="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "3sUKVbtjoEI1ATOVsrCFTZZhGu1XF3thPRJaA8Gjywk="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "M/EonU2/Wb4jHrY6/9AUsvokssYbU4TB77a3YaeYn6k="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER2  PEER1

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999987/1000013). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

RESTART PEERS():  PEER1  PEER2

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restarted all the stopped PEERS, and Invokes 
PASSED QUERY TEST: Expected A/B (999887/1000113) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999887/1000113 1:999887/1000113 2:999887/1000113 3:999887/1000113 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (63). Actual CHs: PEER0(63) PEER1(63) PEER2(63) PEER3(63) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
PASSED QUERY TEST: Expected A/B (998887/1001113) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998887/1001113 1:998887/1001113 2:998887/1001113 3:998887/1001113 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (563). Actual CHs: PEER0(563) PEER1(563) PEER2(563) PEER3(563) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_20_S2S1_IQ_R1R2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [6m54.130652592s]  

-----------
----------- go run CAT_20_S2S1_IQ_R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:53:39 UTC 2016 -----------


----------- go run CAT_21_S0S1_IQ_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:53:39 UTC 2016 -----------
-----------

BEGIN  CAT_21_S0S1_IQ_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:53:40.447677498 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:53:40 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
38a64b16e8e3fb1cc561922fea761e6db2087c5e4928ce613a5769c32304cb64
--------> Starting hyperledger PEER0
623f195f92d2946f6f49455d3f98b7239cc4a6ae3ee6523accd9ccbb039eda36
PEER0 CONTAINERID=623f195f92d2
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
61d56b1f36ae7f60c78ebc50b96f861d52a54cccdd181f0a808dbeddb3af9b28
--------> Starting hyperledger PEER2 <-----------
27840956982fc4377c71a784ab6f2a31756e5d7cd927790deb454e32b9a8ef64
--------> Starting hyperledger PEER3 <-----------
d2f7f180cf302920108651f0a898a43cdd1422a40a1a6e2657dbef5de296ee7b
--------> Printing list of Docker Containers
d2f7f180cf30 27840956982f 61d56b1f36ae 623f195f92d2
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 623f195f92d2   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 61d56b1f36ae   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 27840956982f   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID d2f7f180cf30   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "mHINhOetreb8+pJ8cSciLHn3y1BOqZf9bqyiMu15hRM="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "giGjWq04tdQ2jMOmtTCZskICSmeoYQT8HehnDcRwl7E="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "CVVS9CEMYhYD/2U5sD6tXQR1gKJaq+OXeN4723PkM8g="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "7VkwnX3M/gFxMnUUgSTK1XFCO7hKJd64EyqzPRrW+eY="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0  PEER1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999984/1000016). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER2(6) PEER3(6) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restart PEER 0, and Invokes 
PASSED QUERY TEST: Expected A/B (999884/1000116) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999884/1000116 2:999884/1000116 3:999884/1000116 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER0(63) PEER2(63) PEER3(63) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_21_S0S1_IQ_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [4m36.912444706s]  

-----------
----------- go run CAT_21_S0S1_IQ_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 04:58:17 UTC 2016 -----------


----------- go run CAT_22_S0S1_IQ_R0R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 04:58:17 UTC 2016 -----------
-----------

BEGIN  CAT_22_S0S1_IQ_R0R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 04:58:18.643351497 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 04:58:18 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
9d0a5a7f4a58dd064a6b90c609f610074be2d9af27286135f55f949e288a2105
--------> Starting hyperledger PEER0
3555d5ddbc620740ebb89b0abc917918603def872d2cc17140c52dd2a0afce3b
PEER0 CONTAINERID=3555d5ddbc62
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
27d849f1887b7c1c5457aac4fdf6661fdb1f9f31f21b9925a6810679bb13133d
--------> Starting hyperledger PEER2 <-----------
41d6fee90b4202158969a73cff0cbc6fb9c8fa6cfbd4ab581e25aed85fa7cd28
--------> Starting hyperledger PEER3 <-----------
fef2a83fc4a98d56d8b84ed9b6535553895cbc9a823a3e473bcbcbe0d8a5fb4c
--------> Printing list of Docker Containers
fef2a83fc4a9 41d6fee90b42 27d849f1887b 3555d5ddbc62
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 3555d5ddbc62   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 27d849f1887b   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 41d6fee90b42   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID fef2a83fc4a9   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05



Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "eZb3TysyTZnzwZVSv8GXEXbF5X+WIFzU08G5yXpwuZA="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "2qI/MweOurMkXhKAOOd/MlpjagfPM6rshP1QBK+Bdx4="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "BeDQ7xfCANQklnvBN+U2TTJ/kPv6zh6tAGrZ17sMEbI="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "VyXgSsQzVqlTm2500QAZXJKIrdjNvpYFMx58l2Fcqv0="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP PEERS():  PEER0  PEER1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999984/1000016). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER2(6) PEER3(6) 

RESTART PEERS():  PEER0  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restarted all the stopped PEERS, and Invokes 
PASSED QUERY TEST: Expected A/B (999884/1000116) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999884/1000116 1:999891/1000109 2:999884/1000116 3:999884/1000116 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER0(64) PEER1(60) PEER2(64) PEER3(64) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
PASSED QUERY TEST: Expected A/B (998884/1001116) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998884/1001116 1:998920/1001080 2:998884/1001116 3:998884/1001116 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (558). Actual CHs: PEER0(564) PEER1(546) PEER2(564) PEER3(564) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_22_S0S1_IQ_R0R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [7m40.896824265s]  

-----------
----------- go run CAT_22_S0S1_IQ_R0R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 05:05:59 UTC 2016 -----------


----------- go run CAT_23_S0S1S2_IQ_R0_IQ_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 05:05:59 UTC 2016 -----------
-----------

BEGIN  CAT_23_S0S1S2_IQ_R0_IQ_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 05:06:00.820281753 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 05:06:00 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
bf31872348341e3f97544005d6a55c53c56407d6f862e110c61c8158f8b67b63
--------> Starting hyperledger PEER0
c559dddd00dc200258a879e11fd0120ba1fdbdfd5f9dd74a3875df64f81d6d2e
PEER0 CONTAINERID=c559dddd00dc
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
a7bb980e542e1b28f6295738caefe974d819fc86d43a8d788360a32aec516d68
--------> Starting hyperledger PEER2 <-----------
f68fe71a52ddf55f540561feda506d0af459a8f19d49c866482ef5da1f50662d
--------> Starting hyperledger PEER3 <-----------
7aabecd584278a28687493ec3e40e00c6d4d48f0cfc6bb15a6604a3c058a8465
--------> Printing list of Docker Containers
7aabecd58427 f68fe71a52dd a7bb980e542e c559dddd00dc
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID c559dddd00dc   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a7bb980e542e   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID f68fe71a52dd   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 7aabecd58427   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "AgRd+OhlMQ/EMIXD7FC6aPG7keDHE0u5ymt6oJRCzLI="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "d9vPIVrIMJ7jVq1MIfD2uefO+orddE98Nf351HHCv7g="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "HwZM7P7pVm5zQnD2O0VZBKT/fWXzf9pMByLPNi8JX1g="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "6nFZeqBEqCdHjO2eug2+QwHZZB8bPBIrrUMWzuQw0os="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2

POST/Chaincode: INVOKEs total (50) spread among all 1 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (including vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER3(54) 

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), and restarted just peer 0, and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999841/1000159). ACTUALs (node:A/B): 0:999900/1000100 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER0(54) PEER3(54) 

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, after stopped 3 peers (including vp0), and restarted peer 1 (all running but vp2), and more Invokes 
PASSED QUERY TEST: Expected A/B (999741/1000259) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999741/1000259 1:999741/1000259 3:999741/1000259 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (135). Actual CHs: PEER0(135) PEER1(135) PEER3(135) 

POST/Chaincode: INVOKEs total (2100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, after many more Invokes
PASSED QUERY TEST: Expected A/B (997641/1002359) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997641/1002359 1:997641/1002359 3:997641/1002359 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1185). Actual CHs: PEER0(1185) PEER1(1185) PEER3(1185) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_23_S0S1S2_IQ_R0_IQ_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [9m34.792533063s]  

-----------
----------- go run CAT_23_S0S1S2_IQ_R0_IQ_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 05:15:35 UTC 2016 -----------


----------- go run CAT_24_S0S1S2_IQ_R0R1_IQIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 05:15:35 UTC 2016 -----------
-----------

BEGIN  CAT_24_S0S1S2_IQ_R0R1_IQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 05:15:36.913696632 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 05:15:36 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
1f8b945589c6fb58ccab4f4c3d375f1f856e056759bf02261dd6e506ce66e162
--------> Starting hyperledger PEER0
36894dca982ed170652ece7a8b2b53578c754b94db0e715b589cdef93aaeab7e
PEER0 CONTAINERID=36894dca982e
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
740c2ad4164ce32a504cddf665697f31bdf94c58c90ba1549578afd0767cd122
--------> Starting hyperledger PEER2 <-----------
a1ff1fef5e0b884054359c3a5cd9251fbb02be73db25537cda0cd0e2d267c940
--------> Starting hyperledger PEER3 <-----------
7d0f77dcd6bec448e5c6cbefc760603cbdda7dc833ebcc119ab0a73238b30849
--------> Printing list of Docker Containers
7d0f77dcd6be a1ff1fef5e0b 740c2ad4164c 36894dca982e
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 36894dca982e   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 740c2ad4164c   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID a1ff1fef5e0b   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 7d0f77dcd6be   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05



Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "g12+Ffdvx6Q/TGKAuhnnus9KeUuvHDQP3MOCCwJvO/E="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "ENV5aUu4aPg7uvCNryA2sPTmA1dVu1HEW5kzL7jxCTA="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "mPVnCf6Xg1+7wRJLtwepBTAiAxyWT7X/Aiq9r6diM7s="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "Cj8C9+BfA3v4KTpYGsaiXU7r2JPhm1IVR0ajPnHn28o="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2

POST/Chaincode: INVOKEs total (50) spread among all 1 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (including vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER3(54) 

RESTART PEERS():  PEER0  PEER1

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), and restarted peers 0 & 1 (but not 2), and more Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999839   1000161.
ACTUALs:
PEER 0           999900   1000100
PEER 1           999900   1000100
PEER 3           999900   1000100
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (85). Actual CHs: PEER0(54) PEER1(54) PEER3(54) 

POST/Chaincode: INVOKEs total (2100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many invokes
PASSED QUERY TEST: Expected A/B (997739/1002261) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997739/1002261 1:997739/1002261 3:997739/1002261 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1135). Actual CHs: PEER0(1135) PEER1(1135) PEER3(1135) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (997639/1002361) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997639/1002361 1:997639/1002361 3:997639/1002361 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1186). Actual CHs: PEER0(1186) PEER1(1186) PEER3(1186) 

PASSED CAT_24_S0S1S2_IQ_R0R1_IQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [10m6.679676538s]  

-----------
----------- go run CAT_24_S0S1S2_IQ_R0R1_IQIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 05:25:43 UTC 2016 -----------


----------- go run CAT_25_S0S1S2_IQ_R0R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 05:25:43 UTC 2016 -----------
-----------

BEGIN  CAT_25_S0S1S2_IQ_R0R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 05:25:44.949760643 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 05:25:44 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
42f73cd330a080799c503dcb2de63007497012c01aaa903efd6e6d7ca6891652
--------> Starting hyperledger PEER0
32f78b8407e34c7abd16f0379041f705e7a81a0112637b681b34ca9b8ced9153
PEER0 CONTAINERID=32f78b8407e3
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
a74f70d69599b35486c6d7ad6cb7333145b9dbe9ddcffd4569d39ff1624f1f63
--------> Starting hyperledger PEER2 <-----------
82c39e8ac507ef24dbebbbe1b8c9bd1c4931bdc2abd69c3c96fe218e2710631a
--------> Starting hyperledger PEER3 <-----------
f22afad7191e7e60075eee53f4980e028a6e041500e09e3cd5c6ec602ab4f266
--------> Printing list of Docker Containers
f22afad7191e 82c39e8ac507 a74f70d69599 32f78b8407e3
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 32f78b8407e3   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a74f70d69599   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 82c39e8ac507   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID f22afad7191e   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
user: type secret: GOLANG


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "9R+v4Pv73NEbfgoiCqi5yJOEW4CyYr6OAzcC/W8lXag="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "gk6kVJ9vsZSTLuYIdSDNfCplt9QnzERg4ab06vYWbgo="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "NzFxYrDz+jOdASpWtbxZUSu/wzw7om+ONq5XUlQcAVk="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "JzErHue8aYg9vrtgeyHRx8gEY8ScwwCYqW4ix5kkgGg="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (18): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (30): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (42): + newBlocks(12) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2
Sleep 30 secs

POST/Chaincode: INVOKEs total (50) spread among all 1 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (including vp0), and more Invokes 
SKIPPED QUERY VALIDATION on PEER3: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999900/999900, B=1000100/1000100.
 qtrans (total) =    50
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =    50
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER3(54) 

RESTART PEERS():  PEER0  PEER1  PEER2
Sleep 60 secs
Sleep extra 120 secs

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (54): + newBlocks(13) + queuedBlocks(25)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (92): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (105): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (118): + newBlocks(13) + queuedBlocks(0)
Sleep extra to allow processing queued transactions...
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after restarted all 3 peers, and more Invokes 
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999750   1000250.
ACTUALs:
PEER 0           999800   1000200
PEER 1           999800   1000200
PEER 2           999800   1000200
PEER 3           999800   1000200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (131). Actual CHs: PEER0(106) PEER1(106) PEER2(106) PEER3(106) 

POST/Chaincode: INVOKEs total (3100) spread among all 4 running peers
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (131): + newBlocks(388) + queuedBlocks(0)
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (519): + newBlocks(388) + queuedBlocks(0)
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (907): + newBlocks(388) + queuedBlocks(0)
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (1295): + newBlocks(388) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996700, B=1003350/1003300. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996700, B=1003350/1003300. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996700, B=1003350/1003300. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/0, B=1003350/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996650   1003350.
ACTUALs:
PEER 0           996700   1003300
PEER 1           996700   1003300
PEER 2           996700   1003300
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1683). Actual CHs: PEER0(1658) PEER1(1658) PEER2(1658) PEER3(1603) 
Sleep EXTRA 120 secs

CATCH UP AND CONFIRM RESULTS: Something failed along the way; send enough Invokes for peers to catch up, and sleep awhile, and then recheck.

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1683): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1696): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1709): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1722): + newBlocks(13) + queuedBlocks(0)
Sleep double time...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996600, B=1003450/1003400. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996600, B=1003450/1003400. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996600, B=1003450/1003400. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/0, B=1003450/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996550   1003450.
ACTUALs:
PEER 0           996600   1003400
PEER 1           996600   1003400
PEER 2           996600   1003400
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1735). Actual CHs: PEER0(1710) PEER1(1710) PEER2(1710) PEER3(1658) 

FAILED CAT_25_S0S1S2_IQ_R0R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [17m33.516649622s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_25_S0S1S2_IQ_R0R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 05:43:18 UTC 2016 -----------


----------- go run CAT_26_S1S2S3_IQ_R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 05:43:18 UTC 2016 -----------
-----------

BEGIN  CAT_26_S1S2S3_IQ_R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 05:43:19.717407528 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 05:43:19 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
dfae80f102699a4029025ddb8afe1874428a1b8b0ee44971dd2aa7b0ecc6ed15
--------> Starting hyperledger PEER0
b41117a4aec98025ed51b51c2537966f21db2cdf46d73a774dc59d38951c185f
PEER0 CONTAINERID=b41117a4aec9
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
dc78277c1ee91b1ef17eb72e7e3a21184212f699b7bd8c6af82f1fbeaeb0d13f
--------> Starting hyperledger PEER2 <-----------
4fc9134a60ec6b6b4d45d639c4a3d462a24f00642792ad5a4ce8f14ffc4a1f36
--------> Starting hyperledger PEER3 <-----------
e7e8a8f5200b0e5fb7703c2e8d86fc16caf211e97aacb76b2ad57f971939c64b
--------> Printing list of Docker Containers
e7e8a8f5200b 4fc9134a60ec dc78277c1ee9 b41117a4aec9
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID b41117a4aec9   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID dc78277c1ee9   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 4fc9134a60ec   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID e7e8a8f5200b   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
user: type secret: GOLANG


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "ODYKBxkCG5pDRvdG4bGdvjoiH7VYIujcxlatCnOOQcY="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "dp+qjqBdzdekJLzxZ+PFNsXxWaPylWI9ssv5IWQf5SU="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "erWcgmJCB7YfBwT1IU/2sB5hqwEtTc2qnvsg5v2aXog="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "B99p0z9GwSQxenQUaO9hNcH1DJqTNj7aXcVGFNzDLJY="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER1  PEER2  PEER3

POST/Chaincode: INVOKEs total (50) spread among all 1 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (not vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 0:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER0(54) 

RESTART PEERS():  PEER1  PEER2

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (not vp0), and restarted peers 1 & 2, and more Invokes 
PASSED QUERY TEST: Expected A/B (999843/1000157) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999843/1000157 1:999843/1000157 2:999843/1000157 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (83). Actual CHs: PEER0(83) PEER1(83) PEER2(83) 

POST/Chaincode: INVOKEs total (2100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
PASSED QUERY TEST: Expected A/B (997743/1002257) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997743/1002257 1:997743/1002257 2:997743/1002257 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1133). Actual CHs: PEER0(1133) PEER1(1133) PEER2(1133) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_26_S1S2S3_IQ_R1R2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [9m3.596664598s]  

-----------
----------- go run CAT_26_S1S2S3_IQ_R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 05:52:23 UTC 2016 -----------


----------- go run CAT_27_S1S2S3_IQ_R1R2R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 05:52:23 UTC 2016 -----------
-----------

BEGIN  CAT_27_S1S2S3_IQ_R1R2R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 05:52:24.656889718 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 05:52:24 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
aa7eb54cbed4a73366dcf4dc1f5ff47a0a46c8cd22ef8b768820e0966594ec1d
--------> Starting hyperledger PEER0
fee5b1c183c8c860368f52537d642013dea0c34a9195d754a4b9bc8b9451d77a
PEER0 CONTAINERID=fee5b1c183c8
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
a2e8344d544c4b5c4c6b0835881451792d871e1f60693d47f45316a426f97d69
--------> Starting hyperledger PEER2 <-----------
45362e5ca76e165d91dea685c35c492d2bee265e8363df05fd6dfecca4c80443
--------> Starting hyperledger PEER3 <-----------
40b3b2c2b436b06ce7a484b2775c7e6f9597c464d47a5d698b4bde4b06902354
--------> Printing list of Docker Containers
40b3b2c2b436 45362e5ca76e a2e8344d544c fee5b1c183c8
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID fee5b1c183c8   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a2e8344d544c   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 45362e5ca76e   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 40b3b2c2b436   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "fdQQzxVzoO98qtozYub5CC149vHinfOB8T79ZHo2BZo="
        },
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "EXaHqef/dH1GQLwI5/eQnupD9I6yFScCPciOFpo/3JI="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "DwZw1Hy6aDreG+2o/P2SQy9qlEET1cYLoF7BD6IpZAc="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "/pQdQkIM4S8K1T8+Gd9aHd/S5X2Xk6X7DOgvsYQNVaU="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (18): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (30): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (42): + newBlocks(12) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER1  PEER2  PEER3
Sleep 15 secs

POST/Chaincode: INVOKEs total (50) spread among all 1 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (not vp0), and more Invokes 
SKIPPED QUERY VALIDATION on PEER0: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999900/999900, B=1000100/1000100.
 qtrans (total) =    50
 qtransPerPeerForCH[ 0] =    50
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 0:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER0(54) 

RESTART PEERS():  PEER1  PEER2  PEER3
Sleep 30 secs
Sleep extra 120 secs

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (54): + newBlocks(13) + queuedBlocks(25)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (92): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (105): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (118): + newBlocks(13) + queuedBlocks(0)
Sleep extra to allow processing queued transactions...
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after restarted all peers 1, 2, 3, and more Invokes 
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=999750/999800, B=1000250/1000200. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999750   1000250.
ACTUALs:
PEER 0           999800   1000200
PEER 1           999800   1000200
PEER 2           999800   1000200
PEER 3           999800   1000200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (131). Actual CHs: PEER0(105) PEER1(105) PEER2(105) PEER3(105) 

POST/Chaincode: INVOKEs total (3100) spread among all 4 running peers
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (131): + newBlocks(388) + queuedBlocks(0)
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (519): + newBlocks(388) + queuedBlocks(0)
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (907): + newBlocks(388) + queuedBlocks(0)
Sleep some after sending 775 invokes ...
Increment current ChainHeightBlockCount (1295): + newBlocks(388) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996709, B=1003350/1003291. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996700, B=1003350/1003300. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996700, B=1003350/1003300. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=996650/996700, B=1003350/1003300. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996650   1003350.
ACTUALs:
PEER 0           996709   1003291
PEER 1           996700   1003300
PEER 2           996700   1003300
PEER 3           996700   1003300
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1683). Actual CHs: PEER0(1652) PEER1(1657) PEER2(1657) PEER3(1657) 
Sleep EXTRA 120 secs

CATCH UP AND CONFIRM RESULTS: Something failed along the way; send enough Invokes for peers to catch up, and sleep awhile, and then recheck.

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1683): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1696): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1709): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (1722): + newBlocks(13) + queuedBlocks(0)
Sleep double time...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996611, B=1003450/1003389. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996600, B=1003450/1003400. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996600, B=1003450/1003400. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=996550/996600, B=1003450/1003400. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996550   1003450.
ACTUALs:
PEER 0           996611   1003389
PEER 1           996600   1003400
PEER 2           996600   1003400
PEER 3           996600   1003400
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1735). Actual CHs: PEER0(1703) PEER1(1709) PEER2(1709) PEER3(1709) 

FAILED CAT_27_S1S2S3_IQ_R1R2R3_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [16m53.046759738s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_27_S1S2S3_IQ_R1R2R3_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 06:09:17 UTC 2016 -----------


----------- go run CAT_28_S0S1S2S3_R0R1R2_IQ_R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 06:09:17 UTC 2016 -----------
-----------

BEGIN  CAT_28_S0S1S2S3_R0R1R2_IQ_R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 06:09:19.043965055 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 06:09:19 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
d7814a7357280217de321e04a44d3f78b048d77d92de65043cfcbe6e54b56671
--------> Starting hyperledger PEER0
3d5947963b0b933dcf70d5be73a2f02c49c09d97ba60906f54a4e3e23c69b16a
PEER0 CONTAINERID=3d5947963b0b
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
02f11aadd27aa9141b179ffa788a6851d729231d9c434c2eae3cd6ea3bc1a146
--------> Starting hyperledger PEER2 <-----------
1abbe8728f844823f23d18beab2cad2b311c28570a31f57dd4691c2fecfa1d5d
--------> Starting hyperledger PEER3 <-----------
28ca699c5dd0220bd981230055afe049077d99cb15a28c3d7df79e2464e2331c
--------> Printing list of Docker Containers
28ca699c5dd0 1abbe8728f84 02f11aadd27a 3d5947963b0b
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 3d5947963b0b   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 02f11aadd27a   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1abbe8728f84   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 28ca699c5dd0   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "ATQWVnq/MkVDABTXoBs7rld74f2roKlnWrnOKfUyW8M="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "+t57qiO6L7NCmgN6buIwKy/1jBHlRBQkZT7oYrlFPyc="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "nQxSl74G5X0U4jdiSDp/rNqmMI6fzy+EjIm1NF6wCJ4="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "hMU285EHgFjyOqR3mXE+ASp1NLFmCuWwg2MndoWSK0o="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2  PEER3

RESTART PEERS():  PEER0  PEER1  PEER2
Sleep extra 60 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after stopped all 4 peers and restarted 3 peers, and a few Invokes 
PASSED QUERY TEST: Expected A/B (999893/1000107) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999893/1000107 1:999893/1000107 2:999893/1000107 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER0(58) PEER1(58) PEER2(58) 

RESTART PEERS():  PEER3

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after restarted 4th peers, and Invokes 
PASSED QUERY TEST: Expected A/B (999793/1000207) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999793/1000207 1:999793/1000207 2:999793/1000207 3:999793/1000207 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER0(110) PEER1(110) PEER2(110) PEER3(110) 

POST/Chaincode: INVOKEs total (2100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
PASSED QUERY TEST: Expected A/B (997693/1002307) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997693/1002307 1:997693/1002307 2:997693/1002307 3:997693/1002307 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1162). Actual CHs: PEER0(1162) PEER1(1162) PEER2(1162) PEER3(1162) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_28_S0S1S2S3_R0R1R2_IQ_R3_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [11m59.601529162s]  

-----------
----------- go run CAT_28_S0S1S2S3_R0R1R2_IQ_R3_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 06:21:18 UTC 2016 -----------


----------- go run CAT_29_S0S1S2S3_R0R1R2R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 06:21:18 UTC 2016 -----------
-----------

BEGIN  CAT_29_S0S1S2S3_R0R1R2R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 06:21:19.966614918 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 06:21:19 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
89640f723372503ed76ebe0dfce74975425080fe0a4e7a7e5e9d6b7416620f4f
--------> Starting hyperledger PEER0
b1caca526020be1f370a0fc87a53dc6c377e4a247c1154143e0093834fedf15e
PEER0 CONTAINERID=b1caca526020
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
57041ce6cab5d432b0ac2b2d1c4b5274c6beab5e240b3720d718a904a1adfb6d
--------> Starting hyperledger PEER2 <-----------
488aa2c320f4d3358ad92a39608eb3757a3f289c8422467f29eef83835d3f946
--------> Starting hyperledger PEER3 <-----------
619bc8532dde336c2b4dc8a0b644226c401cf9bbe40056436e4ab64ff8fd1f0e
--------> Printing list of Docker Containers
619bc8532dde 488aa2c320f4 57041ce6cab5 b1caca526020
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID b1caca526020   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 57041ce6cab5   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 488aa2c320f4   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 619bc8532dde   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "c2wUjwZAGmiJHc/4VPwZxpioUGRRs/ugdxsuM7XV2nE="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "KWISIsWCvdUHDuSkA4PsBHPQYy/NKeqlJWD7B3LUFLY="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "vpOk1sHJMTL+V8QiE4LlsWgkUO+7i9110Wd2I598ViI="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "Ddmbw4fJ0vSckG7o2R3eq7RR6rysQvRkjrqjpMITFL4="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2  PEER3

RESTART PEERS():  PEER0  PEER1  PEER2  PEER3
Sleep extra 60 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after stopped and restarted all 4 peers, and a few Invokes 
PASSED QUERY TEST: Expected A/B (999885/1000115) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999885/1000115 1:999885/1000115 2:999885/1000115 3:999885/1000115 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (62). Actual CHs: PEER0(62) PEER1(62) PEER2(62) PEER3(62) 
Sleep extra 60 secs

POST/Chaincode: INVOKEs total (2100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after many more invokes
PASSED QUERY TEST: Expected A/B (997785/1002215) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997785/1002215 1:997785/1002215 2:997785/1002215 3:997785/1002215 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1114). Actual CHs: PEER0(1114) PEER1(1114) PEER2(1114) PEER3(1114) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_29_S0S1S2S3_R0R1R2R3_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [11m24.498454055s]  

-----------
----------- go run CAT_29_S0S1S2S3_R0R1R2R3_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 06:32:44 UTC 2016 -----------


----------- go run CAT_30_DQIQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 06:32:44 UTC 2016 -----------
-----------

BEGIN  CAT_30_DQIQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 06:32:45.83399994 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 06:32:45 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
65a2801d8085af258af7668dd477eb570653d46f1ddca76876f54612986a6334
--------> Starting hyperledger PEER0
dd951c6978c0a56a2da91d85f8de36275496233e31d17c7a4548fc483570031b
PEER0 CONTAINERID=dd951c6978c0
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
ee6753f171c3341596c499c1fc48207ebfec371f0ecd9a3bf5058d6117f15c41
--------> Starting hyperledger PEER2 <-----------
e0fca08d9e3b777b5b4efec83a01d3493b90269b3d6a667220523e9de2cca46d
--------> Starting hyperledger PEER3 <-----------
2de0fe749bd339182ae02bbd68d22372552e1504548c1e4d5561480ff8068447
--------> Printing list of Docker Containers
2de0fe749bd3 e0fca08d9e3b ee6753f171c3 dd951c6978c0
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID dd951c6978c0   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID ee6753f171c3   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID e0fca08d9e3b   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 2de0fe749bd3   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "SPxspNTTlK5ZCoIivIp1Q+0u01AxxYE3oSV50VfTXpI="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "UDCo96jaWCh/mP0buFOQAzx1mRTqnXOUKO2X0l54eJ4="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "EcIk30DFdmgFn4vcEN4CLdiZ710VIrhcdLbUiZbVBOc="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "C6nQZ+bJHKbROKca4arMuN8ilq+iV/jdeZhwQWM0Y7w="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

POST/Chaincode: NEW DEPLOY, on PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, after REDEPLOY with original A & B init values
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (55). Actual CHs: PEER0(55) PEER1(55) PEER2(55) PEER3(55) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999800/1000200 1:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER0(107) PEER1(107) PEER2(107) PEER3(107) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after REDEPLOY using new values
PASSED QUERY TEST: Expected A/B (5000/5000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:5000/5000 1:5000/5000 2:5000/5000 3:5000/5000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (108). Actual CHs: PEER0(108) PEER1(108) PEER2(108) PEER3(108) 

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after more Invokes 
PASSED QUERY TEST: Expected A/B (4900/5100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4900/5100 1:4900/5100 2:4900/5100 3:4900/5100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(160) PEER1(160) PEER2(160) PEER3(160) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_30_DQIQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [7m33.111159328s]  

-----------
----------- go run CAT_30_DQIQDQIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 06:40:18 UTC 2016 -----------


----------- go run CAT_31_S1_DQIQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 06:40:18 UTC 2016 -----------
-----------

BEGIN  CAT_31_S1_DQIQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 06:40:20.266792324 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 06:40:20 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
92373d21da29e57f973ba3aed4396656807ee3ea7788753fbac4d3cd0f5bf243
--------> Starting hyperledger PEER0
33fdd73de890cf37fc32209353367f3223e166512d47250634ced56edfecb224
PEER0 CONTAINERID=33fdd73de890
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
d23f32d58bbd5d77b512f9feefaab04be1fdc6e044f48f55d0e5cd5d703cfa7c
--------> Starting hyperledger PEER2 <-----------
df6bb2d408465c5e9290ee0cad4ea7543b343d6b388fdf73de3718883616a101
--------> Starting hyperledger PEER3 <-----------
adfc10e0d9b45260a19e02efb4829525a730911f2dcbcd4b160978d68bbca402
--------> Printing list of Docker Containers
adfc10e0d9b4 df6bb2d40846 d23f32d58bbd 33fdd73de890
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 33fdd73de890   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID d23f32d58bbd   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID df6bb2d40846   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID adfc10e0d9b4   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "LXMhuI8SRP6BzszC88YQ2/gIGcouXi7bjhuLZzO8Eec="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "J0aeeArsV/Wdq2O40MLfUeKfR1uPt+fYcw9Y92tVHH0="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "oH23C8V7nxIXjJMGt23yE9U/koaLCvqweDo2YQgpsnc="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "CCxn3i7LEVsaQmGHoLHzpDSDDP0zA2p54lI48jGsE2g="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER1

POST/Chaincode: NEW DEPLOY, on PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, after STOP PEER 1, and REDEPLOY with original A & B init values
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (55). Actual CHs: PEER0(55) PEER2(55) PEER3(55) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER0(106) PEER2(106) PEER3(106) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after REDEPLOY using new values
PASSED QUERY TEST: Expected A/B (5000/5000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:5000/5000 2:5000/5000 3:5000/5000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER0(107) PEER2(107) PEER3(107) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after more Invokes 
PASSED QUERY TEST: Expected A/B (4900/5100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4900/5100 2:4900/5100 3:4900/5100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (158). Actual CHs: PEER0(158) PEER2(158) PEER3(158) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_31_S1_DQIQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [7m43.700126639s]  

-----------
----------- go run CAT_31_S1_DQIQDQIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 06:48:03 UTC 2016 -----------


----------- go run CAT_32_S0_IQ_DQIQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 06:48:03 UTC 2016 -----------
-----------

BEGIN  CAT_32_S0_IQ_DQIQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 06:48:05.297657646 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 06:48:05 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
d3bbc00e1172dc06a6192cee97c0e864b5848d920c1f803d358ce7772a145950
--------> Starting hyperledger PEER0
baf7b1f661a37a9179e2fc0f592c3f40bf3605c2bb18198766e0c1b719555257
PEER0 CONTAINERID=baf7b1f661a3
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
aeb1c1b5d1eaa7252c49144c2a21d0087279b6a95c30c0292f5ebe5b2a4c6e47
--------> Starting hyperledger PEER2 <-----------
dd48e05b876fbb30480b3be29f2827384fb52d4b0f582d69cb5f8635515bc947
--------> Starting hyperledger PEER3 <-----------
6fa09cc4f2b274649ce4a8372d13852be3aaa1be2aa13a3069ff570501608733
--------> Printing list of Docker Containers
6fa09cc4f2b2 dd48e05b876f aeb1c1b5d1ea baf7b1f661a3
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID baf7b1f661a3   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID aeb1c1b5d1ea   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID dd48e05b876f   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 6fa09cc4f2b2   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05



Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "S3WrW4Q7QwmTrmksgNER9jeAT4A1q0Iv3zIPpWeB0GA="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "zwt8Xw4JVaJ7PMTaOkdUahr0HXZcjLh818BAW46HbMU="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "DRwPeZv/FnFdaOSn0apHT7D5gi5HZW/wU2EXLCDEqZw="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "d2zJdUs5MtXRy1zMxCbwXbdEJod17ORjdxrV/D2TIzY="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (105). Actual CHs: PEER1(105) PEER2(105) PEER3(105) 

POST/Chaincode: NEW DEPLOY, on PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, after STOP PEER 0, and REDEPLOY with original A & B init values
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER1(106) PEER2(106) PEER3(106) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999700/1000300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999700/1000300 2:999700/1000300 3:999700/1000300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (157). Actual CHs: PEER1(157) PEER2(157) PEER3(157) 

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after REDEPLOY using new values
PASSED QUERY TEST: Expected A/B (5000/5000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:5000/5000 2:5000/5000 3:5000/5000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (158). Actual CHs: PEER1(158) PEER2(158) PEER3(158) 

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after more Invokes 
PASSED QUERY TEST: Expected A/B (4900/5100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:4900/5100 2:4900/5100 3:4900/5100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (209). Actual CHs: PEER1(209) PEER2(209) PEER3(209) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_32_S0_IQ_DQIQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [8m15.050855569s]  

-----------
----------- go run CAT_32_S0_IQ_DQIQDQIQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 06:56:20 UTC 2016 -----------


----------- go run CAT_33_S1S2_D_I_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 06:56:20 UTC 2016 -----------
-----------

BEGIN  CAT_33_S1S2_D_I_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 06:56:21.640204757 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 06:56:21 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
fb1535ee031713158c365278b355c90615f588c4a2db772bc257f21a3e279d5f
--------> Starting hyperledger PEER0
d1937b054d13ce360d0de4b6aaa6e656759e89160f941b7dfe1d101145308407
PEER0 CONTAINERID=d1937b054d13
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
fe9223357629c55fc7f968525720271f52f2cb8f8d845c1dbf78d3fbd8182c7d
--------> Starting hyperledger PEER2 <-----------
c9da066f534b5839012dcca86aad3560635e0524010e127081ede5e783870a6d
--------> Starting hyperledger PEER3 <-----------
651b86a63265c542b7fa3c2770b01118533b77e06c3fbc66e6506ed51c9e6e25
--------> Printing list of Docker Containers
651b86a63265 c9da066f534b fe9223357629 d1937b054d13
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID d1937b054d13   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID fe9223357629   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID c9da066f534b   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 651b86a63265   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
user: type secret: GOLANG


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "ZQasvihCZMU2GafAsKGV9nxBgmj5IPAy3Vk+RwPsm7c="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "QQxQCqmT51IqVz/d5p2bEKE3qqTW8VA3TQ6uUeb+kB0="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "GhhGQNVy7v9AGRHNf5moJdQiTQIwYGxoF2Zsk7cjyFg="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "1kaqd3TH1zBifnSh2a9OG1w+WfQFc2EIYbaIa0px1o4="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER1  PEER2

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: INVOKEs total (100) spread among all 2 running peers

RESTART PEERS():  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 2 peers, deploy, and restarted 1 peer and more Invokes 
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4800/5200 1:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (156). Actual CHs: PEER0(156) PEER1(156) PEER3(156) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_33_S1S2_D_I_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [6m17.683323396s]  

-----------
----------- go run CAT_33_S1S2_D_I_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 07:02:39 UTC 2016 -----------


----------- go run CAT_34_S0S1_D_I_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 07:02:39 UTC 2016 -----------
-----------

BEGIN  CAT_34_S0S1_D_I_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 07:02:40.659006824 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 07:02:40 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
4cbe55bbdb569c4a71b7a09ea6cde5511e9a86b9d107a27c98ab50eb25157201
--------> Starting hyperledger PEER0
e61f3a057eb67820c351edb5f946b8328228fb097cb407379f99a6532bf0260c
PEER0 CONTAINERID=e61f3a057eb6
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
46d2fce3a464667d5623022735c03615a3a7b400b9760a178f1a30934d756b5b
--------> Starting hyperledger PEER2 <-----------
3f616a034272b8424ff82cff1592682cffc9c83baaf4e459316cef98f1f6da50
--------> Starting hyperledger PEER3 <-----------
67eb5bb2b04a9d33c407dd6ead23273736a2ca91706d6e4f8904ef87d493a803
--------> Printing list of Docker Containers
67eb5bb2b04a 3f616a034272 46d2fce3a464 e61f3a057eb6
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID e61f3a057eb6   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 46d2fce3a464   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 3f616a034272   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 67eb5bb2b04a   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "68NETC46nNaVrQmpAFSYEhcVU2nTNq1gqRZy7kn8djA="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "Lk9fhh7uiW4/+tPBBekBywvOIPYlbF3Epe1F1ThviBU="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "wWHfRHHISzCwgeUcdEIJOV8EZ4EBWI6kvcGKpTDPa9I="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "AE7Nm1jGEPdUbK8Ru2yNKrpsZusu5qUngNLHoolv1Rs="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: INVOKEs total (100) spread among all 2 running peers

RESTART PEERS():  PEER0

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 2 peers (0 &1), deploy, and restarted 1 peer (0) and more Invokes 
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4800/5200 2:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (156). Actual CHs: PEER0(156) PEER2(156) PEER3(156) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_34_S0S1_D_I_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [7m4.691040852s]  

-----------
----------- go run CAT_34_S0S1_D_I_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 07:09:45 UTC 2016 -----------


----------- go run CAT_35_S0S1_D_I_R0R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 07:09:45 UTC 2016 -----------
-----------

BEGIN  CAT_35_S0S1_D_I_R0R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 07:09:46.628166264 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 07:09:46 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
025de7dfb7f87d2786684e7a4d5fe553263d814abb79f22c60b43cbe670f390b
--------> Starting hyperledger PEER0
d2ab6b4e2335f7372a8667900dbdea08a9569ba9941a5e516b6d581d0c176a56
PEER0 CONTAINERID=d2ab6b4e2335
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
e622687c036af6358a4e843a4db7b249f48091d491ba2314e4e59ec477fb743d
--------> Starting hyperledger PEER2 <-----------
7f421148b7ea546750e8080d9dd14521b9e7f8d39d126d1c9135bad60248d639
--------> Starting hyperledger PEER3 <-----------
56c117cb846fe95f46e0fbf19c4fb24e607bc61c909df5201b0e132500f0b573
--------> Printing list of Docker Containers
56c117cb846f 7f421148b7ea e622687c036a d2ab6b4e2335
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID d2ab6b4e2335   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID e622687c036a   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 7f421148b7ea   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 56c117cb846f   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "8KzSaEtzraqcAxy4DEJ/qiOHcfyMCPGdZ2+QQWEG6LM="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "FTm9TonfD9AgSNKwc0ijXIm3Poq4jvnzWh847wJ1UkQ="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "AX7S3rhE/R3xfCWc70f7QA2/m3aeQ6JSmy1Kw1pDwKo="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "ttjzZ5plQjqtBDeB1whdoOX8eIkV4wVFv2DReyv6SWk="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000

POST/Chaincode: INVOKEs total (100) spread among all 2 running peers

RESTART PEERS():  PEER0  PEER1

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 2 peers (0 & 1), deploy, and restarted all peers, and more Invokes 
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4800/5200 1:4892/5108 2:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (157). Actual CHs: PEER0(157) PEER1(109) PEER2(157) PEER3(157) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_35_S0S1_D_I_R0R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [7m14.692698603s]  

-----------
----------- go run CAT_35_S0S1_D_I_R0R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 07:17:01 UTC 2016 -----------


----------- go run CAT_36_S0S1S2_D_I_R0R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 07:17:01 UTC 2016 -----------
-----------

BEGIN  CAT_36_S0S1S2_D_I_R0R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 07:17:02.645615917 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 07:17:02 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
9676ed7a1f61131d2df0e4195c3ce360a2e6ea21f5d72a6ab1bf1a0899e0ef4d
--------> Starting hyperledger PEER0
87a02a784518a665f1583f5764a6d7734238699b2f11e218342333df0e032368
PEER0 CONTAINERID=87a02a784518
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
2ece8b49a0c0681f1f1de54cabdf3402c3abe14b1035d80e6b439241e1bf7c58
--------> Starting hyperledger PEER2 <-----------
53c703e7d1695a473ddf90422a5458524d8b54275741c1543e89281edcf87d09
--------> Starting hyperledger PEER3 <-----------
b6a563eae8b55032329287d5fd2be36310413ecddcec9669a4be89345ce56822
--------> Printing list of Docker Containers
b6a563eae8b5 53c703e7d169 2ece8b49a0c0 87a02a784518
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 87a02a784518   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 2ece8b49a0c0   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 53c703e7d169   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID b6a563eae8b5   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "xRoyHqhVdl3nBzSHu467Xhj/oNO9PjqrvywwNvL6nBA="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "iyNkSsxTpYnHUPM/s0fjyldBRQEghaWqiHVdHjyxmNI="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "gAoGPUFcadheTfYh/DcUQ0eWZvNUPxfHh6knXiGdIIU="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "nrUYRiFhsg8WhNiCLLKJkpLDLozTb7b2LQnQ7s7yyeU="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (18): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (30): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (42): + newBlocks(12) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2
Sleep 30 secs

POST/Chaincode: DEPLOY chaincode on PEER3, A=10000 B=10000
Sleep 120 secs, after deployed, txId=7e06bd6796639f9b28c2e744549556461ca8c8d222f787fcb9d5d1d067fe6d968ca25e44c17b90697129042e526c6705913de02ac2cb0936e5d6882c445b1c8b

POST/Chaincode: INVOKEs total (100) spread among all 1 running peers

RESTART PEERS():  PEER0  PEER1
Sleep 60 secs
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (54): + newBlocks(1) + queuedBlocks(51)
Sleep extra to allow processing queued transactions...

POST/Chaincode: INVOKEs (2) using peer 1
Sleep some after sending 2 invokes ...
Increment current ChainHeightBlockCount (106): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: INVOKEs (8) using peer 3
Sleep some after sending 8 invokes ...
Increment current ChainHeightBlockCount (107): + newBlocks(4) + queuedBlocks(0)
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), deploy, and restarted peers 0 & 1 (but not 2), and more Invokes 
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=9889/9900, B=10111/10100. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=9889/9900, B=10111/10100. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=9889/9900, B=10111/10100. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9889     10111.
ACTUALs:
PEER 0             9900     10100
PEER 1             9900     10100
PEER 3             9900     10100
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (111). Actual CHs: PEER0(111) PEER1(111) PEER3(111) 

CATCH UP AND CONFIRM RESULTS: Something failed along the way; send enough Invokes for peers to catch up, and sleep awhile, and then recheck.

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers
Sleep some after sending 34 invokes ...
Increment current ChainHeightBlockCount (111): + newBlocks(17) + queuedBlocks(0)
Sleep some after sending 33 invokes ...
Increment current ChainHeightBlockCount (128): + newBlocks(17) + queuedBlocks(0)
Sleep some after sending 33 invokes ...
Increment current ChainHeightBlockCount (145): + newBlocks(17) + queuedBlocks(0)
Sleep double time...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=9789/9800, B=10211/10200. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=9789/9800, B=10211/10200. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=9789/9800, B=10211/10200. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9789     10211.
ACTUALs:
PEER 0             9800     10200
PEER 1             9800     10200
PEER 3             9800     10200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (162). Actual CHs: PEER0(162) PEER1(162) PEER3(162) 

FAILED CAT_36_S0S1S2_D_I_R0R1_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [11m25.067834242s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_36_S0S1S2_D_I_R0R1_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 07:28:27 UTC 2016 -----------


----------- go run CAT_37_S0S1S2_D_I_R0R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 07:28:27 UTC 2016 -----------
-----------

BEGIN  CAT_37_S0S1S2_D_I_R0R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 07:28:29.031943431 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 07:28:29 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
838318965a417433147b74fd3eb56062db9a1953adbc181f985033cae087f42b
--------> Starting hyperledger PEER0
017f61b8ea32ca13b3a689f5d47c5f6340d074d544d1e428e7a86d3c6b9bd379
PEER0 CONTAINERID=017f61b8ea32
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
671912a203d5ff7e0b5e4715277b8e0f5b1a28b991f04605256054e9c4303e37
--------> Starting hyperledger PEER2 <-----------
6d9579391fff432c1ca9868afcc7626f656dc5b8cb059d0587c99064b2181d1e
--------> Starting hyperledger PEER3 <-----------
944a0761970f7d792c9875497393d126dc93b28c1342112dac1ce4a7ec634477
--------> Printing list of Docker Containers
944a0761970f 6d9579391fff 671912a203d5 017f61b8ea32
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 017f61b8ea32   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 671912a203d5   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 6d9579391fff   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 944a0761970f   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "+J9XTG4701J22Ms53bqwxVwH3eWVNdrPEP65ZOGR/qQ="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "vYjzJqwVGVt9lMCcjToQkmCoPbIPsye5pNg9s/39qYw="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "T7n6X1z9Hlm+/IdSace2FEmJMeS1/UZiuSoPB/Asi5k="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "PdwX4BYANZSuYpFXaG/Wkb9YpMma+cZ8sND9/LUybpM="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (18): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (30): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (42): + newBlocks(12) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER0  PEER1  PEER2
Sleep 30 secs

POST/Chaincode: DEPLOY chaincode on PEER3, A=5000 B=5000
Sleep 120 secs, after deployed, txId=70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc
Sleep extra 120 secs

POST/Chaincode: INVOKEs total (100) spread among all 1 running peers

RESTART PEERS():  PEER0  PEER1  PEER2
Sleep 60 secs
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (54): + newBlocks(1) + queuedBlocks(51)
Sleep extra to allow processing queued transactions...

POST/Chaincode: INVOKEs (2) using peer 1
Sleep some after sending 2 invokes ...
Increment current ChainHeightBlockCount (106): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: INVOKEs (4) using peer 2
Sleep some after sending 4 invokes ...
Increment current ChainHeightBlockCount (107): + newBlocks(2) + queuedBlocks(0)

POST/Chaincode: INVOKEs (8) using peer 3
Sleep some after sending 8 invokes ...
Increment current ChainHeightBlockCount (109): + newBlocks(4) + queuedBlocks(0)
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), deploy, and restarted all peers, and more Invokes 
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      4885      5115.
ACTUALs:
PEER 0                0         0
PEER 1                0         0
PEER 2                0         0
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(62) PEER1(62) PEER2(62) PEER3(54) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (113): + newBlocks(125) + queuedBlocks(0)
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (238): + newBlocks(125) + queuedBlocks(0)
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (363): + newBlocks(125) + queuedBlocks(0)
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (488): + newBlocks(125) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3885      6115.
ACTUALs:
PEER 0                0         0
PEER 1                0         0
PEER 2                0         0
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (613). Actual CHs: PEER0(562) PEER1(562) PEER2(562) PEER3(526) 

CATCH UP AND CONFIRM RESULTS: Something failed along the way; send enough Invokes for peers to catch up, and sleep awhile, and then recheck.

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (613): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (626): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (639): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (652): + newBlocks(13) + queuedBlocks(0)
Sleep double time...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3785      6215.
ACTUALs:
PEER 0                0         0
PEER 1                0         0
PEER 2                0         0
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (665). Actual CHs: PEER0(614) PEER1(614) PEER2(614) PEER3(586) 

FAILED CAT_37_S0S1S2_D_I_R0R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [15m17.643256789s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_37_S0S1S2_D_I_R0R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 07:43:46 UTC 2016 -----------


----------- go run CAT_38_S1S2S3_D_I_R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 07:43:46 UTC 2016 -----------
-----------

BEGIN  CAT_38_S1S2S3_D_I_R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 07:43:48.010005342 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 07:43:48 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
9382727f8d97864903cf819d091960446c08159c20e22c2332719fae210bd621
--------> Starting hyperledger PEER0
01c1831ac20cad2b111ed04deda5c64ae6c10dd12522e9502be3418c23ec9d7b
PEER0 CONTAINERID=01c1831ac20c
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
655badacc93e107a6ffb97bee173616ccb6358f9be8e016be09eceb19dbfe218
--------> Starting hyperledger PEER2 <-----------
f5db65b3a2c756063b156a9bc35b5f0f84e6a217ba4d49656298c673b3d81d01
--------> Starting hyperledger PEER3 <-----------
a5d1291fc3d4c7754099fe9754b9f76aaff5a8b4dcfb68551dc26364dbe86206
--------> Printing list of Docker Containers
a5d1291fc3d4 f5db65b3a2c7 655badacc93e 01c1831ac20c
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 01c1831ac20c   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 655badacc93e   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID f5db65b3a2c7   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID a5d1291fc3d4   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "WhcGB+joT5DKGEKdESUzWYw+0dzbnqlZpjAedp8Eklw="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "92PaOW+QchfR01Ah6CJrJnOE/kpFKeo7l3Nw3NbPcxk="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "zAfKAzdANfAn7S0IhL3KjG28gQxsc9G4HDmwiP5Fvgc="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "F2TJ0zhzT/lXTJmlunTx+MPVRBP4ZfSeVQIqKmcz5NU="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (18): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (30): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (42): + newBlocks(12) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER1  PEER2  PEER3
Sleep 15 secs
Sleep extra 60 secs

POST/Chaincode: DEPLOY chaincode on PEER0, A=10000 B=10000
Sleep 120 secs, after deployed, txId=7e06bd6796639f9b28c2e744549556461ca8c8d222f787fcb9d5d1d067fe6d968ca25e44c17b90697129042e526c6705913de02ac2cb0936e5d6882c445b1c8b

POST/Chaincode: INVOKEs total (100) spread among all 1 running peers

RESTART PEERS():  PEER1  PEER2
Sleep 30 secs
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (54): + newBlocks(1) + queuedBlocks(51)
Sleep extra to allow processing queued transactions...

POST/Chaincode: INVOKEs (2) using peer 1
Sleep some after sending 2 invokes ...
Increment current ChainHeightBlockCount (106): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: INVOKEs (4) using peer 2
Sleep some after sending 4 invokes ...
Increment current ChainHeightBlockCount (107): + newBlocks(2) + queuedBlocks(0)
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (not vp0), deploy, and restarted two of three peers, and more Invokes 
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=9893/9900, B=10107/10100. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=9893/9900, B=10107/10100. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=9893/9900, B=10107/10100. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9893     10107.
ACTUALs:
PEER 0             9900     10100
PEER 1             9900     10100
PEER 2             9900     10100
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(109) PEER1(109) PEER2(109) 

CATCH UP AND CONFIRM RESULTS: Something failed along the way; send enough Invokes for peers to catch up, and sleep awhile, and then recheck.

POST/Chaincode: INVOKEs total (100) spread among all 3 running peers
Sleep some after sending 34 invokes ...
Increment current ChainHeightBlockCount (109): + newBlocks(17) + queuedBlocks(0)
Sleep some after sending 33 invokes ...
Increment current ChainHeightBlockCount (126): + newBlocks(17) + queuedBlocks(0)
Sleep some after sending 33 invokes ...
Increment current ChainHeightBlockCount (143): + newBlocks(17) + queuedBlocks(0)
Sleep double time...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=9793/9800, B=10207/10200. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=9793/9800, B=10207/10200. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=9793/9800, B=10207/10200. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9793     10207.
ACTUALs:
PEER 0             9800     10200
PEER 1             9800     10200
PEER 2             9800     10200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(160) PEER1(160) PEER2(160) 

FAILED CAT_38_S1S2S3_D_I_R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [11m32.461056284s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_38_S1S2S3_D_I_R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 07:55:20 UTC 2016 -----------


----------- go run CAT_39_S1S2S3_D_I_R1R2R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Sat Jul 30 07:55:20 UTC 2016 -----------
-----------

BEGIN  CAT_39_S1S2S3_D_I_R1R2R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-07-30 07:55:21.804486964 +0000 UTC]
Creating a local docker network
Initially  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
After change dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
cmd  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric.sh-n4
in all caps: 
%!(EXTRA string=STARTING AT: Sat Jul 30 07:55:21 UTC 2016
PEER_IMAGE=rameshthoomu/peer:3e0e80a
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc:3e0e80a
CONSENSUS=pbft
PBFT_MODE=batch
PBFT_BATCHSIZE=2

--------> Setting default command line Arg values to without security & consensus and starts 4 PEERS and CA
Number of PEERS are 4
Is Security and Privacy enabled Y
1
Docker daemon is running
--------> Pulling Base Docker Images from Docker Hub
latest: Pulling from rameshthoomu/baseimage
Digest: sha256:48e23f8ee4618994e226089a2814f0d447dc1d43ee5888bdbab39f51ca9e3ac3
Status: Image is up to date for rameshthoomu/baseimage:latest
3e0e80a: Pulling from rameshthoomu/peer
Digest: sha256:55d7a618d4299ab64d4d5c97beaafd9fead97d49ea82bc3df8b76fe1ff6ae8c8
Status: Image is up to date for rameshthoomu/peer:3e0e80a
3e0e80a: Pulling from rameshthoomu/membersrvc
Digest: sha256:2a36af5b1315977f725b495bf66269801403652590c0a8fd56bb21f66187a658
Status: Image is up to date for rameshthoomu/membersrvc:3e0e80a
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
603e6b2541d3ac38571e7a1b4f70d81adb780d2f50dcee511ea4a67232247e22
--------> Starting hyperledger PEER0
3b0ad6b538908b06e8d5bb33886a617f99c94a9402cee9650dc844a7a8382b0f
PEER0 CONTAINERID=3b0ad6b53890
PEER0 PEER_IP_ADDRESS=172.17.0.3
--------> Starting hyperledger PEER1 <-----------
8434c55b9bbc9815021e677751ba2d148ebe03beb9a0cd122d46c64e78a7da05
--------> Starting hyperledger PEER2 <-----------
502885c666086a5fc5a9f85f05bfb74163d3926e787cef3ad737bec5757fce08
--------> Starting hyperledger PEER3 <-----------
699b7265bcd4930258022e88c0cff0165a37ca5b4c0db2335edb788b1a61ee40
--------> Printing list of Docker Containers
699b7265bcd4 502885c66608 8434c55b9bbc 3b0ad6b53890
4

WORKDIR=/opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 3b0ad6b53890   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:5000
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 8434c55b9bbc   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:5001
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 502885c66608   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:5002
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 699b7265bcd4   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:5003
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
)Copied contents
After change back dir  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh
ip: 172.17.0.3 port: 5000 name PEER0 
Users:
test_user0 MS9qrN8hFjlE
ip: 172.17.0.4 port: 5000 name PEER1 
Users:
test_user1 jGlNl6ImkuDo
ip: 172.17.0.5 port: 5000 name PEER2 
Users:
test_user2 zMflqOKezFiA
ip: 172.17.0.6 port: 5000 name PEER3 
Users:
test_user3 vWdLCE00vJy0
Available Chaincodes :

Chaincode : example02

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02



Chaincode : example05

Detail :

user: type secret: GOLANG
user: path secret: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05


Getting and Initializing Peer details from network
CWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/chcotest
Num of Peers 4
Num of Users 4
Name of network localpeer_ramesh

RegisterUsers: Calling Register for all users in all peers in network
Registering test_user0 with password MS9qrN8hFjlE on PEER0 using http://172.17.0.3:5000
From Register  http://172.17.0.3:5000 test_user0 MS9qrN8hFjlE
Register PayLoad 
 
{
"enrollId":"test_user0",
"enrollSecret":"MS9qrN8hFjlE"
}

**Sending Rest Request to : http://172.17.0.3:5000/registrar
{"OK": "User test_user0 is already logged in."}
Done Registering  1 users on  PEER0
Registering test_user1 with password jGlNl6ImkuDo on PEER1 using http://172.17.0.4:5000
From Register  http://172.17.0.4:5000 test_user1 jGlNl6ImkuDo
Register PayLoad 
 
{
"enrollId":"test_user1",
"enrollSecret":"jGlNl6ImkuDo"
}

**Sending Rest Request to : http://172.17.0.4:5000/registrar
{"OK": "User test_user1 is already logged in."}
Done Registering  1 users on  PEER1
Registering test_user2 with password zMflqOKezFiA on PEER2 using http://172.17.0.5:5000
From Register  http://172.17.0.5:5000 test_user2 zMflqOKezFiA
Register PayLoad 
 
{
"enrollId":"test_user2",
"enrollSecret":"zMflqOKezFiA"
}

**Sending Rest Request to : http://172.17.0.5:5000/registrar
{"OK": "User test_user2 is already logged in."}
Done Registering  1 users on  PEER2
Registering test_user3 with password vWdLCE00vJy0 on PEER3 using http://172.17.0.6:5000
From Register  http://172.17.0.6:5000 test_user3 vWdLCE00vJy0
Register PayLoad 
 
{
"enrollId":"test_user3",
"enrollSecret":"vWdLCE00vJy0"
}

**Sending Rest Request to : http://172.17.0.6:5000/registrar
{"OK": "User test_user3 is already logged in."}
Done Registering  1 users on  PEER3

NetworkPeers()
status:  200 OK
{
    "peers": [
        {
            "ID": {
                "name": "vp0"
            },
            "address": "172.17.0.1:30001",
            "type": 1,
            "pkiID": "IQ9FjLqfyyV4Sn1c2xC4m/dYWlGj5g0cEJC+pbYyzIk="
        },
        {
            "ID": {
                "name": "vp2"
            },
            "address": "172.17.0.5:30303",
            "type": 1,
            "pkiID": "b3LIAW00PbWsEMspsBB8DKrIYJiMwESn5LomRGBKZVc="
        },
        {
            "ID": {
                "name": "vp1"
            },
            "address": "172.17.0.4:30303",
            "type": 1,
            "pkiID": "k+OqsN9s45FpLjUv0aAJOtSy2P1lxEn6N9JlUBvllFI="
        },
        {
            "ID": {
                "name": "vp3"
            },
            "address": "172.17.0.6:30303",
            "type": 1,
            "pkiID": "YIQ6oRdvOJWOVJ4M72gmZ1fpEY38lTG0gVzQm7Z1jNs="
        }
    ]
}


POST/Chaincode: DEPLOY chaincode on PEER3, A=1000000 B=1000000

POST/Chaincode: INVOKEs (1) DUPLICATED x each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) spread among all 4 running peers
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (6): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (18): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (30): + newBlocks(12) + queuedBlocks(0)
Sleep some after sending 24 invokes ...
Increment current ChainHeightBlockCount (42): + newBlocks(12) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=999900, B=1000100.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP PEERS():  PEER1  PEER2  PEER3
Sleep 15 secs

POST/Chaincode: DEPLOY chaincode on PEER0, A=5000 B=5000
Sleep 120 secs, after deployed, txId=70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc
Sleep extra 120 secs

POST/Chaincode: INVOKEs total (100) spread among all 1 running peers

RESTART PEERS():  PEER1  PEER2  PEER3
Sleep 30 secs
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0
Sleep some after sending 1 invokes ...
Increment current ChainHeightBlockCount (54): + newBlocks(1) + queuedBlocks(51)
Sleep extra to allow processing queued transactions...

POST/Chaincode: INVOKEs (2) using peer 1
Sleep some after sending 2 invokes ...
Increment current ChainHeightBlockCount (106): + newBlocks(1) + queuedBlocks(0)

POST/Chaincode: INVOKEs (4) using peer 2
Sleep some after sending 4 invokes ...
Increment current ChainHeightBlockCount (107): + newBlocks(2) + queuedBlocks(0)

POST/Chaincode: INVOKEs (8) using peer 3
Sleep some after sending 8 invokes ...
Increment current ChainHeightBlockCount (109): + newBlocks(4) + queuedBlocks(0)
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (not vp0), deploy, and restarted all peers, and more Invokes 
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=4885/0, B=5115/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      4885      5115.
ACTUALs:
PEER 0                0         0
PEER 1                0         0
PEER 2                0         0
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(62) PEER1(62) PEER2(62) PEER3(62) 

POST/Chaincode: INVOKEs total (1000) spread among all 4 running peers
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (113): + newBlocks(125) + queuedBlocks(0)
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (238): + newBlocks(125) + queuedBlocks(0)
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (363): + newBlocks(125) + queuedBlocks(0)
Sleep some after sending 250 invokes ...
Increment current ChainHeightBlockCount (488): + newBlocks(125) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=3885/0, B=6115/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3885      6115.
ACTUALs:
PEER 0                0         0
PEER 1                0         0
PEER 2                0         0
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (613). Actual CHs: PEER0(545) PEER1(562) PEER2(562) PEER3(562) 

CATCH UP AND CONFIRM RESULTS: Something failed along the way; send enough Invokes for peers to catch up, and sleep awhile, and then recheck.

POST/Chaincode: INVOKEs total (100) spread among all 4 running peers
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (613): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (626): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (639): + newBlocks(13) + queuedBlocks(0)
Sleep some after sending 25 invokes ...
Increment current ChainHeightBlockCount (652): + newBlocks(13) + queuedBlocks(0)
Sleep double time...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
Error extracted from json: res.Error.Message Query failure
POST /chaincode returned code =-32003 message=Query failure
 	data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 70dfc8e6aab1d13428f8732f4013af116dd588b76ab813734aaca5d9e2903b668b902420477d382f8dc234b4c30f5587addea8a5bf2e25c470ec46d9b27cbabc - LedgerError - ResourceNotFound: ledger: resource not found)
FAIL on PEER0: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
FAIL on PEER2: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
FAIL on PEER3: QUERY RESULTS: EXPECTED/ACTUAL: A=3785/0, B=6215/0. *****FAIL*****
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3785      6215.
ACTUALs:
PEER 0                0         0
PEER 1                0         0
PEER 2                0         0
PEER 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (665). Actual CHs: PEER0(605) PEER1(614) PEER2(614) PEER3(614) 

FAILED CAT_39_S1S2S3_D_I_R1R2R3_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [14m24.998660625s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_39_S1S2S3_D_I_R1R2R3_IQ.go FINISHFINISHFINISHFINISHFINISH Sat Jul 30 08:09:46 UTC 2016 -----------

=========== GROUP END
=========== Sat Jul 30 00:58:59 UTC 2016, BEFORE RUN GROUP: BEGIN= , PASSED= , FAILED=
=========== Sat Jul 30 08:09:46 UTC 2016, AFTER RUN GROUP : BEGIN=39 , PASSED=33 , FAILED=6
